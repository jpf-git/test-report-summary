/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 53.0, "minX": 0.0, "maxY": 15351.0, "series": [{"data": [[0.0, 64.0], [0.1, 67.0], [0.2, 70.0], [0.3, 70.0], [0.4, 71.0], [0.5, 72.0], [0.6, 73.0], [0.7, 74.0], [0.8, 75.0], [0.9, 75.0], [1.0, 75.0], [1.1, 76.0], [1.2, 76.0], [1.3, 76.0], [1.4, 77.0], [1.5, 77.0], [1.6, 77.0], [1.7, 78.0], [1.8, 78.0], [1.9, 78.0], [2.0, 78.0], [2.1, 78.0], [2.2, 79.0], [2.3, 79.0], [2.4, 79.0], [2.5, 79.0], [2.6, 80.0], [2.7, 80.0], [2.8, 80.0], [2.9, 80.0], [3.0, 80.0], [3.1, 80.0], [3.2, 81.0], [3.3, 81.0], [3.4, 81.0], [3.5, 81.0], [3.6, 81.0], [3.7, 82.0], [3.8, 82.0], [3.9, 82.0], [4.0, 82.0], [4.1, 82.0], [4.2, 82.0], [4.3, 82.0], [4.4, 83.0], [4.5, 83.0], [4.6, 83.0], [4.7, 83.0], [4.8, 83.0], [4.9, 83.0], [5.0, 83.0], [5.1, 84.0], [5.2, 84.0], [5.3, 84.0], [5.4, 84.0], [5.5, 84.0], [5.6, 84.0], [5.7, 85.0], [5.8, 85.0], [5.9, 85.0], [6.0, 85.0], [6.1, 85.0], [6.2, 85.0], [6.3, 85.0], [6.4, 85.0], [6.5, 85.0], [6.6, 86.0], [6.7, 86.0], [6.8, 86.0], [6.9, 86.0], [7.0, 86.0], [7.1, 86.0], [7.2, 86.0], [7.3, 86.0], [7.4, 87.0], [7.5, 87.0], [7.6, 87.0], [7.7, 87.0], [7.8, 87.0], [7.9, 87.0], [8.0, 87.0], [8.1, 87.0], [8.2, 88.0], [8.3, 88.0], [8.4, 88.0], [8.5, 88.0], [8.6, 88.0], [8.7, 88.0], [8.8, 88.0], [8.9, 88.0], [9.0, 89.0], [9.1, 89.0], [9.2, 89.0], [9.3, 89.0], [9.4, 89.0], [9.5, 89.0], [9.6, 89.0], [9.7, 89.0], [9.8, 90.0], [9.9, 90.0], [10.0, 90.0], [10.1, 90.0], [10.2, 90.0], [10.3, 90.0], [10.4, 90.0], [10.5, 90.0], [10.6, 90.0], [10.7, 91.0], [10.8, 91.0], [10.9, 91.0], [11.0, 91.0], [11.1, 91.0], [11.2, 91.0], [11.3, 91.0], [11.4, 91.0], [11.5, 91.0], [11.6, 91.0], [11.7, 91.0], [11.8, 92.0], [11.9, 92.0], [12.0, 92.0], [12.1, 92.0], [12.2, 92.0], [12.3, 92.0], [12.4, 92.0], [12.5, 92.0], [12.6, 92.0], [12.7, 92.0], [12.8, 93.0], [12.9, 93.0], [13.0, 93.0], [13.1, 93.0], [13.2, 93.0], [13.3, 93.0], [13.4, 93.0], [13.5, 93.0], [13.6, 93.0], [13.7, 94.0], [13.8, 94.0], [13.9, 94.0], [14.0, 94.0], [14.1, 94.0], [14.2, 94.0], [14.3, 94.0], [14.4, 94.0], [14.5, 94.0], [14.6, 94.0], [14.7, 94.0], [14.8, 95.0], [14.9, 95.0], [15.0, 95.0], [15.1, 95.0], [15.2, 95.0], [15.3, 95.0], [15.4, 95.0], [15.5, 96.0], [15.6, 96.0], [15.7, 96.0], [15.8, 96.0], [15.9, 96.0], [16.0, 96.0], [16.1, 96.0], [16.2, 96.0], [16.3, 96.0], [16.4, 96.0], [16.5, 97.0], [16.6, 97.0], [16.7, 97.0], [16.8, 97.0], [16.9, 97.0], [17.0, 97.0], [17.1, 97.0], [17.2, 97.0], [17.3, 97.0], [17.4, 97.0], [17.5, 97.0], [17.6, 97.0], [17.7, 98.0], [17.8, 98.0], [17.9, 98.0], [18.0, 98.0], [18.1, 98.0], [18.2, 98.0], [18.3, 98.0], [18.4, 98.0], [18.5, 98.0], [18.6, 98.0], [18.7, 99.0], [18.8, 99.0], [18.9, 99.0], [19.0, 99.0], [19.1, 99.0], [19.2, 99.0], [19.3, 99.0], [19.4, 99.0], [19.5, 100.0], [19.6, 100.0], [19.7, 100.0], [19.8, 100.0], [19.9, 100.0], [20.0, 100.0], [20.1, 101.0], [20.2, 101.0], [20.3, 101.0], [20.4, 101.0], [20.5, 101.0], [20.6, 101.0], [20.7, 101.0], [20.8, 101.0], [20.9, 101.0], [21.0, 101.0], [21.1, 102.0], [21.2, 102.0], [21.3, 102.0], [21.4, 102.0], [21.5, 102.0], [21.6, 102.0], [21.7, 103.0], [21.8, 103.0], [21.9, 103.0], [22.0, 103.0], [22.1, 103.0], [22.2, 103.0], [22.3, 103.0], [22.4, 103.0], [22.5, 104.0], [22.6, 104.0], [22.7, 104.0], [22.8, 104.0], [22.9, 104.0], [23.0, 105.0], [23.1, 105.0], [23.2, 105.0], [23.3, 105.0], [23.4, 105.0], [23.5, 106.0], [23.6, 106.0], [23.7, 106.0], [23.8, 106.0], [23.9, 106.0], [24.0, 106.0], [24.1, 106.0], [24.2, 107.0], [24.3, 107.0], [24.4, 107.0], [24.5, 107.0], [24.6, 107.0], [24.7, 107.0], [24.8, 108.0], [24.9, 108.0], [25.0, 108.0], [25.1, 108.0], [25.2, 108.0], [25.3, 108.0], [25.4, 109.0], [25.5, 109.0], [25.6, 109.0], [25.7, 109.0], [25.8, 109.0], [25.9, 109.0], [26.0, 109.0], [26.1, 110.0], [26.2, 110.0], [26.3, 110.0], [26.4, 110.0], [26.5, 110.0], [26.6, 110.0], [26.7, 110.0], [26.8, 111.0], [26.9, 111.0], [27.0, 111.0], [27.1, 111.0], [27.2, 111.0], [27.3, 111.0], [27.4, 112.0], [27.5, 112.0], [27.6, 112.0], [27.7, 112.0], [27.8, 112.0], [27.9, 112.0], [28.0, 113.0], [28.1, 113.0], [28.2, 113.0], [28.3, 113.0], [28.4, 114.0], [28.5, 114.0], [28.6, 114.0], [28.7, 114.0], [28.8, 114.0], [28.9, 114.0], [29.0, 115.0], [29.1, 115.0], [29.2, 115.0], [29.3, 115.0], [29.4, 116.0], [29.5, 116.0], [29.6, 116.0], [29.7, 116.0], [29.8, 117.0], [29.9, 117.0], [30.0, 117.0], [30.1, 117.0], [30.2, 117.0], [30.3, 117.0], [30.4, 118.0], [30.5, 118.0], [30.6, 118.0], [30.7, 118.0], [30.8, 118.0], [30.9, 119.0], [31.0, 119.0], [31.1, 119.0], [31.2, 119.0], [31.3, 120.0], [31.4, 120.0], [31.5, 120.0], [31.6, 120.0], [31.7, 120.0], [31.8, 120.0], [31.9, 121.0], [32.0, 121.0], [32.1, 121.0], [32.2, 121.0], [32.3, 122.0], [32.4, 122.0], [32.5, 122.0], [32.6, 122.0], [32.7, 122.0], [32.8, 123.0], [32.9, 123.0], [33.0, 123.0], [33.1, 123.0], [33.2, 124.0], [33.3, 124.0], [33.4, 124.0], [33.5, 124.0], [33.6, 124.0], [33.7, 125.0], [33.8, 125.0], [33.9, 125.0], [34.0, 125.0], [34.1, 125.0], [34.2, 126.0], [34.3, 126.0], [34.4, 126.0], [34.5, 126.0], [34.6, 126.0], [34.7, 127.0], [34.8, 127.0], [34.9, 127.0], [35.0, 127.0], [35.1, 127.0], [35.2, 128.0], [35.3, 128.0], [35.4, 128.0], [35.5, 128.0], [35.6, 129.0], [35.7, 129.0], [35.8, 129.0], [35.9, 130.0], [36.0, 130.0], [36.1, 130.0], [36.2, 130.0], [36.3, 130.0], [36.4, 131.0], [36.5, 131.0], [36.6, 131.0], [36.7, 131.0], [36.8, 132.0], [36.9, 132.0], [37.0, 132.0], [37.1, 133.0], [37.2, 133.0], [37.3, 133.0], [37.4, 133.0], [37.5, 133.0], [37.6, 133.0], [37.7, 134.0], [37.8, 134.0], [37.9, 134.0], [38.0, 134.0], [38.1, 135.0], [38.2, 135.0], [38.3, 135.0], [38.4, 136.0], [38.5, 136.0], [38.6, 136.0], [38.7, 136.0], [38.8, 137.0], [38.9, 137.0], [39.0, 137.0], [39.1, 137.0], [39.2, 138.0], [39.3, 138.0], [39.4, 138.0], [39.5, 138.0], [39.6, 139.0], [39.7, 139.0], [39.8, 139.0], [39.9, 139.0], [40.0, 140.0], [40.1, 140.0], [40.2, 140.0], [40.3, 141.0], [40.4, 141.0], [40.5, 141.0], [40.6, 141.0], [40.7, 142.0], [40.8, 142.0], [40.9, 142.0], [41.0, 142.0], [41.1, 143.0], [41.2, 143.0], [41.3, 143.0], [41.4, 143.0], [41.5, 143.0], [41.6, 143.0], [41.7, 144.0], [41.8, 144.0], [41.9, 144.0], [42.0, 144.0], [42.1, 144.0], [42.2, 145.0], [42.3, 145.0], [42.4, 145.0], [42.5, 145.0], [42.6, 146.0], [42.7, 146.0], [42.8, 147.0], [42.9, 147.0], [43.0, 147.0], [43.1, 147.0], [43.2, 147.0], [43.3, 148.0], [43.4, 148.0], [43.5, 148.0], [43.6, 149.0], [43.7, 149.0], [43.8, 149.0], [43.9, 150.0], [44.0, 151.0], [44.1, 151.0], [44.2, 151.0], [44.3, 151.0], [44.4, 151.0], [44.5, 152.0], [44.6, 152.0], [44.7, 152.0], [44.8, 153.0], [44.9, 153.0], [45.0, 153.0], [45.1, 153.0], [45.2, 154.0], [45.3, 154.0], [45.4, 155.0], [45.5, 155.0], [45.6, 155.0], [45.7, 155.0], [45.8, 156.0], [45.9, 156.0], [46.0, 156.0], [46.1, 156.0], [46.2, 157.0], [46.3, 157.0], [46.4, 157.0], [46.5, 157.0], [46.6, 158.0], [46.7, 158.0], [46.8, 158.0], [46.9, 159.0], [47.0, 159.0], [47.1, 160.0], [47.2, 160.0], [47.3, 160.0], [47.4, 161.0], [47.5, 161.0], [47.6, 161.0], [47.7, 162.0], [47.8, 162.0], [47.9, 162.0], [48.0, 162.0], [48.1, 163.0], [48.2, 163.0], [48.3, 163.0], [48.4, 164.0], [48.5, 164.0], [48.6, 165.0], [48.7, 165.0], [48.8, 165.0], [48.9, 165.0], [49.0, 166.0], [49.1, 166.0], [49.2, 166.0], [49.3, 167.0], [49.4, 167.0], [49.5, 167.0], [49.6, 168.0], [49.7, 168.0], [49.8, 168.0], [49.9, 168.0], [50.0, 169.0], [50.1, 169.0], [50.2, 169.0], [50.3, 169.0], [50.4, 169.0], [50.5, 170.0], [50.6, 170.0], [50.7, 170.0], [50.8, 171.0], [50.9, 171.0], [51.0, 171.0], [51.1, 171.0], [51.2, 172.0], [51.3, 172.0], [51.4, 172.0], [51.5, 173.0], [51.6, 173.0], [51.7, 173.0], [51.8, 174.0], [51.9, 174.0], [52.0, 174.0], [52.1, 174.0], [52.2, 175.0], [52.3, 175.0], [52.4, 175.0], [52.5, 175.0], [52.6, 176.0], [52.7, 176.0], [52.8, 176.0], [52.9, 177.0], [53.0, 177.0], [53.1, 177.0], [53.2, 177.0], [53.3, 178.0], [53.4, 178.0], [53.5, 178.0], [53.6, 179.0], [53.7, 179.0], [53.8, 179.0], [53.9, 180.0], [54.0, 180.0], [54.1, 181.0], [54.2, 181.0], [54.3, 181.0], [54.4, 181.0], [54.5, 182.0], [54.6, 182.0], [54.7, 182.0], [54.8, 182.0], [54.9, 183.0], [55.0, 183.0], [55.1, 184.0], [55.2, 184.0], [55.3, 184.0], [55.4, 184.0], [55.5, 185.0], [55.6, 185.0], [55.7, 185.0], [55.8, 185.0], [55.9, 186.0], [56.0, 186.0], [56.1, 187.0], [56.2, 187.0], [56.3, 187.0], [56.4, 187.0], [56.5, 188.0], [56.6, 188.0], [56.7, 188.0], [56.8, 189.0], [56.9, 189.0], [57.0, 189.0], [57.1, 189.0], [57.2, 190.0], [57.3, 190.0], [57.4, 191.0], [57.5, 192.0], [57.6, 192.0], [57.7, 193.0], [57.8, 193.0], [57.9, 193.0], [58.0, 194.0], [58.1, 194.0], [58.2, 194.0], [58.3, 194.0], [58.4, 195.0], [58.5, 195.0], [58.6, 196.0], [58.7, 196.0], [58.8, 196.0], [58.9, 197.0], [59.0, 197.0], [59.1, 198.0], [59.2, 198.0], [59.3, 198.0], [59.4, 199.0], [59.5, 199.0], [59.6, 200.0], [59.7, 200.0], [59.8, 200.0], [59.9, 201.0], [60.0, 201.0], [60.1, 201.0], [60.2, 201.0], [60.3, 202.0], [60.4, 202.0], [60.5, 203.0], [60.6, 204.0], [60.7, 204.0], [60.8, 204.0], [60.9, 205.0], [61.0, 205.0], [61.1, 205.0], [61.2, 206.0], [61.3, 206.0], [61.4, 206.0], [61.5, 207.0], [61.6, 207.0], [61.7, 208.0], [61.8, 208.0], [61.9, 209.0], [62.0, 209.0], [62.1, 210.0], [62.2, 210.0], [62.3, 211.0], [62.4, 212.0], [62.5, 212.0], [62.6, 212.0], [62.7, 214.0], [62.8, 214.0], [62.9, 214.0], [63.0, 215.0], [63.1, 215.0], [63.2, 216.0], [63.3, 216.0], [63.4, 216.0], [63.5, 217.0], [63.6, 217.0], [63.7, 218.0], [63.8, 218.0], [63.9, 219.0], [64.0, 220.0], [64.1, 221.0], [64.2, 221.0], [64.3, 222.0], [64.4, 223.0], [64.5, 224.0], [64.6, 224.0], [64.7, 225.0], [64.8, 225.0], [64.9, 226.0], [65.0, 227.0], [65.1, 227.0], [65.2, 227.0], [65.3, 228.0], [65.4, 228.0], [65.5, 229.0], [65.6, 229.0], [65.7, 230.0], [65.8, 231.0], [65.9, 232.0], [66.0, 232.0], [66.1, 233.0], [66.2, 234.0], [66.3, 234.0], [66.4, 235.0], [66.5, 236.0], [66.6, 236.0], [66.7, 237.0], [66.8, 238.0], [66.9, 239.0], [67.0, 239.0], [67.1, 240.0], [67.2, 241.0], [67.3, 242.0], [67.4, 243.0], [67.5, 243.0], [67.6, 244.0], [67.7, 244.0], [67.8, 245.0], [67.9, 246.0], [68.0, 247.0], [68.1, 247.0], [68.2, 248.0], [68.3, 249.0], [68.4, 250.0], [68.5, 251.0], [68.6, 252.0], [68.7, 253.0], [68.8, 253.0], [68.9, 254.0], [69.0, 254.0], [69.1, 255.0], [69.2, 256.0], [69.3, 257.0], [69.4, 258.0], [69.5, 259.0], [69.6, 260.0], [69.7, 262.0], [69.8, 263.0], [69.9, 265.0], [70.0, 265.0], [70.1, 266.0], [70.2, 267.0], [70.3, 268.0], [70.4, 269.0], [70.5, 270.0], [70.6, 270.0], [70.7, 271.0], [70.8, 272.0], [70.9, 274.0], [71.0, 275.0], [71.1, 277.0], [71.2, 279.0], [71.3, 280.0], [71.4, 281.0], [71.5, 282.0], [71.6, 283.0], [71.7, 283.0], [71.8, 285.0], [71.9, 286.0], [72.0, 287.0], [72.1, 287.0], [72.2, 288.0], [72.3, 289.0], [72.4, 289.0], [72.5, 290.0], [72.6, 291.0], [72.7, 291.0], [72.8, 292.0], [72.9, 293.0], [73.0, 293.0], [73.1, 294.0], [73.2, 294.0], [73.3, 295.0], [73.4, 295.0], [73.5, 296.0], [73.6, 296.0], [73.7, 296.0], [73.8, 297.0], [73.9, 298.0], [74.0, 298.0], [74.1, 299.0], [74.2, 299.0], [74.3, 299.0], [74.4, 299.0], [74.5, 300.0], [74.6, 300.0], [74.7, 301.0], [74.8, 301.0], [74.9, 302.0], [75.0, 302.0], [75.1, 303.0], [75.2, 303.0], [75.3, 304.0], [75.4, 304.0], [75.5, 304.0], [75.6, 305.0], [75.7, 305.0], [75.8, 305.0], [75.9, 306.0], [76.0, 306.0], [76.1, 306.0], [76.2, 306.0], [76.3, 307.0], [76.4, 307.0], [76.5, 308.0], [76.6, 308.0], [76.7, 309.0], [76.8, 310.0], [76.9, 310.0], [77.0, 311.0], [77.1, 311.0], [77.2, 311.0], [77.3, 312.0], [77.4, 312.0], [77.5, 313.0], [77.6, 313.0], [77.7, 314.0], [77.8, 314.0], [77.9, 315.0], [78.0, 316.0], [78.1, 316.0], [78.2, 317.0], [78.3, 317.0], [78.4, 317.0], [78.5, 318.0], [78.6, 318.0], [78.7, 319.0], [78.8, 320.0], [78.9, 320.0], [79.0, 320.0], [79.1, 321.0], [79.2, 322.0], [79.3, 322.0], [79.4, 322.0], [79.5, 323.0], [79.6, 324.0], [79.7, 324.0], [79.8, 325.0], [79.9, 325.0], [80.0, 326.0], [80.1, 326.0], [80.2, 327.0], [80.3, 327.0], [80.4, 328.0], [80.5, 328.0], [80.6, 329.0], [80.7, 329.0], [80.8, 330.0], [80.9, 331.0], [81.0, 332.0], [81.1, 333.0], [81.2, 333.0], [81.3, 334.0], [81.4, 335.0], [81.5, 336.0], [81.6, 337.0], [81.7, 337.0], [81.8, 338.0], [81.9, 340.0], [82.0, 340.0], [82.1, 341.0], [82.2, 341.0], [82.3, 343.0], [82.4, 343.0], [82.5, 344.0], [82.6, 344.0], [82.7, 345.0], [82.8, 345.0], [82.9, 346.0], [83.0, 347.0], [83.1, 348.0], [83.2, 349.0], [83.3, 350.0], [83.4, 351.0], [83.5, 351.0], [83.6, 352.0], [83.7, 353.0], [83.8, 354.0], [83.9, 355.0], [84.0, 356.0], [84.1, 356.0], [84.2, 357.0], [84.3, 358.0], [84.4, 359.0], [84.5, 359.0], [84.6, 359.0], [84.7, 361.0], [84.8, 361.0], [84.9, 361.0], [85.0, 362.0], [85.1, 363.0], [85.2, 365.0], [85.3, 365.0], [85.4, 367.0], [85.5, 367.0], [85.6, 368.0], [85.7, 369.0], [85.8, 370.0], [85.9, 371.0], [86.0, 372.0], [86.1, 373.0], [86.2, 374.0], [86.3, 376.0], [86.4, 377.0], [86.5, 378.0], [86.6, 379.0], [86.7, 380.0], [86.8, 381.0], [86.9, 382.0], [87.0, 383.0], [87.1, 384.0], [87.2, 384.0], [87.3, 385.0], [87.4, 386.0], [87.5, 388.0], [87.6, 389.0], [87.7, 389.0], [87.8, 391.0], [87.9, 391.0], [88.0, 392.0], [88.1, 393.0], [88.2, 395.0], [88.3, 395.0], [88.4, 397.0], [88.5, 398.0], [88.6, 400.0], [88.7, 402.0], [88.8, 403.0], [88.9, 403.0], [89.0, 405.0], [89.1, 408.0], [89.2, 409.0], [89.3, 413.0], [89.4, 414.0], [89.5, 416.0], [89.6, 417.0], [89.7, 418.0], [89.8, 419.0], [89.9, 421.0], [90.0, 423.0], [90.1, 426.0], [90.2, 427.0], [90.3, 428.0], [90.4, 429.0], [90.5, 431.0], [90.6, 432.0], [90.7, 433.0], [90.8, 435.0], [90.9, 438.0], [91.0, 439.0], [91.1, 442.0], [91.2, 444.0], [91.3, 446.0], [91.4, 451.0], [91.5, 454.0], [91.6, 458.0], [91.7, 463.0], [91.8, 466.0], [91.9, 469.0], [92.0, 476.0], [92.1, 479.0], [92.2, 484.0], [92.3, 486.0], [92.4, 488.0], [92.5, 490.0], [92.6, 493.0], [92.7, 495.0], [92.8, 497.0], [92.9, 499.0], [93.0, 501.0], [93.1, 504.0], [93.2, 505.0], [93.3, 507.0], [93.4, 509.0], [93.5, 511.0], [93.6, 512.0], [93.7, 517.0], [93.8, 521.0], [93.9, 523.0], [94.0, 526.0], [94.1, 527.0], [94.2, 528.0], [94.3, 530.0], [94.4, 533.0], [94.5, 535.0], [94.6, 539.0], [94.7, 544.0], [94.8, 548.0], [94.9, 559.0], [95.0, 562.0], [95.1, 565.0], [95.2, 568.0], [95.3, 578.0], [95.4, 582.0], [95.5, 585.0], [95.6, 598.0], [95.7, 600.0], [95.8, 607.0], [95.9, 616.0], [96.0, 622.0], [96.1, 634.0], [96.2, 655.0], [96.3, 665.0], [96.4, 684.0], [96.5, 707.0], [96.6, 727.0], [96.7, 734.0], [96.8, 760.0], [96.9, 773.0], [97.0, 847.0], [97.1, 922.0], [97.2, 1015.0], [97.3, 1083.0], [97.4, 1110.0], [97.5, 1121.0], [97.6, 1130.0], [97.7, 1143.0], [97.8, 1149.0], [97.9, 1155.0], [98.0, 1162.0], [98.1, 1178.0], [98.2, 1195.0], [98.3, 1205.0], [98.4, 1222.0], [98.5, 1245.0], [98.6, 1264.0], [98.7, 1315.0], [98.8, 1319.0], [98.9, 1368.0], [99.0, 1428.0], [99.1, 1481.0], [99.2, 1549.0], [99.3, 1762.0], [99.4, 2268.0], [99.5, 2541.0], [99.6, 2771.0], [99.7, 2883.0], [99.8, 2954.0], [99.9, 3193.0]], "isOverall": false, "label": "3-Draw Prize", "isController": false}, {"data": [[0.0, 53.0], [0.1, 56.0], [0.2, 58.0], [0.3, 60.0], [0.4, 60.0], [0.5, 61.0], [0.6, 61.0], [0.7, 62.0], [0.8, 63.0], [0.9, 63.0], [1.0, 64.0], [1.1, 64.0], [1.2, 65.0], [1.3, 65.0], [1.4, 65.0], [1.5, 65.0], [1.6, 66.0], [1.7, 66.0], [1.8, 66.0], [1.9, 66.0], [2.0, 66.0], [2.1, 67.0], [2.2, 67.0], [2.3, 67.0], [2.4, 67.0], [2.5, 67.0], [2.6, 68.0], [2.7, 68.0], [2.8, 68.0], [2.9, 68.0], [3.0, 68.0], [3.1, 69.0], [3.2, 69.0], [3.3, 69.0], [3.4, 69.0], [3.5, 70.0], [3.6, 70.0], [3.7, 70.0], [3.8, 70.0], [3.9, 70.0], [4.0, 70.0], [4.1, 71.0], [4.2, 71.0], [4.3, 71.0], [4.4, 71.0], [4.5, 71.0], [4.6, 71.0], [4.7, 72.0], [4.8, 72.0], [4.9, 72.0], [5.0, 72.0], [5.1, 72.0], [5.2, 72.0], [5.3, 73.0], [5.4, 73.0], [5.5, 73.0], [5.6, 73.0], [5.7, 73.0], [5.8, 73.0], [5.9, 73.0], [6.0, 73.0], [6.1, 74.0], [6.2, 74.0], [6.3, 74.0], [6.4, 74.0], [6.5, 74.0], [6.6, 74.0], [6.7, 75.0], [6.8, 75.0], [6.9, 75.0], [7.0, 75.0], [7.1, 75.0], [7.2, 75.0], [7.3, 75.0], [7.4, 75.0], [7.5, 76.0], [7.6, 76.0], [7.7, 76.0], [7.8, 76.0], [7.9, 76.0], [8.0, 76.0], [8.1, 76.0], [8.2, 77.0], [8.3, 77.0], [8.4, 77.0], [8.5, 77.0], [8.6, 77.0], [8.7, 77.0], [8.8, 77.0], [8.9, 78.0], [9.0, 78.0], [9.1, 78.0], [9.2, 78.0], [9.3, 78.0], [9.4, 78.0], [9.5, 78.0], [9.6, 78.0], [9.7, 78.0], [9.8, 78.0], [9.9, 79.0], [10.0, 79.0], [10.1, 79.0], [10.2, 79.0], [10.3, 79.0], [10.4, 79.0], [10.5, 79.0], [10.6, 80.0], [10.7, 80.0], [10.8, 80.0], [10.9, 80.0], [11.0, 80.0], [11.1, 80.0], [11.2, 80.0], [11.3, 81.0], [11.4, 81.0], [11.5, 81.0], [11.6, 81.0], [11.7, 81.0], [11.8, 81.0], [11.9, 81.0], [12.0, 81.0], [12.1, 81.0], [12.2, 82.0], [12.3, 82.0], [12.4, 82.0], [12.5, 82.0], [12.6, 82.0], [12.7, 82.0], [12.8, 82.0], [12.9, 82.0], [13.0, 83.0], [13.1, 83.0], [13.2, 83.0], [13.3, 83.0], [13.4, 83.0], [13.5, 83.0], [13.6, 83.0], [13.7, 83.0], [13.8, 83.0], [13.9, 84.0], [14.0, 84.0], [14.1, 84.0], [14.2, 84.0], [14.3, 84.0], [14.4, 84.0], [14.5, 84.0], [14.6, 85.0], [14.7, 85.0], [14.8, 85.0], [14.9, 85.0], [15.0, 85.0], [15.1, 85.0], [15.2, 85.0], [15.3, 86.0], [15.4, 86.0], [15.5, 86.0], [15.6, 86.0], [15.7, 86.0], [15.8, 86.0], [15.9, 87.0], [16.0, 87.0], [16.1, 87.0], [16.2, 87.0], [16.3, 87.0], [16.4, 87.0], [16.5, 87.0], [16.6, 87.0], [16.7, 88.0], [16.8, 88.0], [16.9, 88.0], [17.0, 88.0], [17.1, 88.0], [17.2, 88.0], [17.3, 88.0], [17.4, 89.0], [17.5, 89.0], [17.6, 89.0], [17.7, 89.0], [17.8, 89.0], [17.9, 89.0], [18.0, 89.0], [18.1, 89.0], [18.2, 90.0], [18.3, 90.0], [18.4, 90.0], [18.5, 90.0], [18.6, 90.0], [18.7, 90.0], [18.8, 91.0], [18.9, 91.0], [19.0, 91.0], [19.1, 91.0], [19.2, 91.0], [19.3, 91.0], [19.4, 91.0], [19.5, 91.0], [19.6, 92.0], [19.7, 92.0], [19.8, 92.0], [19.9, 92.0], [20.0, 92.0], [20.1, 92.0], [20.2, 93.0], [20.3, 93.0], [20.4, 93.0], [20.5, 93.0], [20.6, 93.0], [20.7, 94.0], [20.8, 94.0], [20.9, 94.0], [21.0, 94.0], [21.1, 94.0], [21.2, 94.0], [21.3, 95.0], [21.4, 95.0], [21.5, 95.0], [21.6, 95.0], [21.7, 95.0], [21.8, 96.0], [21.9, 96.0], [22.0, 97.0], [22.1, 97.0], [22.2, 97.0], [22.3, 98.0], [22.4, 98.0], [22.5, 98.0], [22.6, 98.0], [22.7, 99.0], [22.8, 99.0], [22.9, 100.0], [23.0, 100.0], [23.1, 100.0], [23.2, 100.0], [23.3, 101.0], [23.4, 101.0], [23.5, 101.0], [23.6, 101.0], [23.7, 102.0], [23.8, 102.0], [23.9, 102.0], [24.0, 103.0], [24.1, 103.0], [24.2, 103.0], [24.3, 103.0], [24.4, 103.0], [24.5, 103.0], [24.6, 104.0], [24.7, 104.0], [24.8, 104.0], [24.9, 105.0], [25.0, 105.0], [25.1, 105.0], [25.2, 105.0], [25.3, 106.0], [25.4, 106.0], [25.5, 106.0], [25.6, 106.0], [25.7, 106.0], [25.8, 107.0], [25.9, 107.0], [26.0, 107.0], [26.1, 107.0], [26.2, 108.0], [26.3, 108.0], [26.4, 108.0], [26.5, 108.0], [26.6, 108.0], [26.7, 109.0], [26.8, 109.0], [26.9, 109.0], [27.0, 110.0], [27.1, 110.0], [27.2, 110.0], [27.3, 111.0], [27.4, 111.0], [27.5, 111.0], [27.6, 111.0], [27.7, 112.0], [27.8, 112.0], [27.9, 113.0], [28.0, 113.0], [28.1, 114.0], [28.2, 114.0], [28.3, 114.0], [28.4, 115.0], [28.5, 115.0], [28.6, 115.0], [28.7, 116.0], [28.8, 116.0], [28.9, 117.0], [29.0, 117.0], [29.1, 117.0], [29.2, 118.0], [29.3, 118.0], [29.4, 118.0], [29.5, 119.0], [29.6, 119.0], [29.7, 119.0], [29.8, 119.0], [29.9, 120.0], [30.0, 120.0], [30.1, 120.0], [30.2, 121.0], [30.3, 121.0], [30.4, 121.0], [30.5, 122.0], [30.6, 122.0], [30.7, 122.0], [30.8, 123.0], [30.9, 123.0], [31.0, 123.0], [31.1, 123.0], [31.2, 124.0], [31.3, 124.0], [31.4, 124.0], [31.5, 124.0], [31.6, 124.0], [31.7, 125.0], [31.8, 125.0], [31.9, 125.0], [32.0, 125.0], [32.1, 126.0], [32.2, 126.0], [32.3, 126.0], [32.4, 127.0], [32.5, 127.0], [32.6, 127.0], [32.7, 127.0], [32.8, 127.0], [32.9, 128.0], [33.0, 128.0], [33.1, 128.0], [33.2, 129.0], [33.3, 129.0], [33.4, 129.0], [33.5, 130.0], [33.6, 130.0], [33.7, 131.0], [33.8, 131.0], [33.9, 131.0], [34.0, 132.0], [34.1, 132.0], [34.2, 132.0], [34.3, 133.0], [34.4, 133.0], [34.5, 133.0], [34.6, 133.0], [34.7, 134.0], [34.8, 134.0], [34.9, 134.0], [35.0, 135.0], [35.1, 135.0], [35.2, 135.0], [35.3, 136.0], [35.4, 136.0], [35.5, 136.0], [35.6, 137.0], [35.7, 137.0], [35.8, 137.0], [35.9, 138.0], [36.0, 138.0], [36.1, 139.0], [36.2, 139.0], [36.3, 139.0], [36.4, 140.0], [36.5, 140.0], [36.6, 141.0], [36.7, 141.0], [36.8, 141.0], [36.9, 141.0], [37.0, 142.0], [37.1, 142.0], [37.2, 142.0], [37.3, 143.0], [37.4, 143.0], [37.5, 143.0], [37.6, 143.0], [37.7, 144.0], [37.8, 144.0], [37.9, 144.0], [38.0, 145.0], [38.1, 145.0], [38.2, 145.0], [38.3, 145.0], [38.4, 145.0], [38.5, 146.0], [38.6, 146.0], [38.7, 146.0], [38.8, 146.0], [38.9, 147.0], [39.0, 147.0], [39.1, 148.0], [39.2, 148.0], [39.3, 149.0], [39.4, 149.0], [39.5, 149.0], [39.6, 150.0], [39.7, 150.0], [39.8, 150.0], [39.9, 151.0], [40.0, 151.0], [40.1, 151.0], [40.2, 151.0], [40.3, 152.0], [40.4, 152.0], [40.5, 152.0], [40.6, 153.0], [40.7, 153.0], [40.8, 153.0], [40.9, 153.0], [41.0, 154.0], [41.1, 154.0], [41.2, 154.0], [41.3, 154.0], [41.4, 155.0], [41.5, 155.0], [41.6, 155.0], [41.7, 155.0], [41.8, 156.0], [41.9, 156.0], [42.0, 156.0], [42.1, 156.0], [42.2, 157.0], [42.3, 157.0], [42.4, 157.0], [42.5, 157.0], [42.6, 157.0], [42.7, 158.0], [42.8, 158.0], [42.9, 158.0], [43.0, 158.0], [43.1, 159.0], [43.2, 159.0], [43.3, 160.0], [43.4, 160.0], [43.5, 160.0], [43.6, 160.0], [43.7, 161.0], [43.8, 161.0], [43.9, 161.0], [44.0, 162.0], [44.1, 162.0], [44.2, 162.0], [44.3, 163.0], [44.4, 163.0], [44.5, 163.0], [44.6, 163.0], [44.7, 164.0], [44.8, 164.0], [44.9, 164.0], [45.0, 164.0], [45.1, 165.0], [45.2, 165.0], [45.3, 165.0], [45.4, 166.0], [45.5, 166.0], [45.6, 166.0], [45.7, 166.0], [45.8, 167.0], [45.9, 167.0], [46.0, 167.0], [46.1, 168.0], [46.2, 168.0], [46.3, 168.0], [46.4, 168.0], [46.5, 169.0], [46.6, 169.0], [46.7, 169.0], [46.8, 169.0], [46.9, 170.0], [47.0, 170.0], [47.1, 171.0], [47.2, 171.0], [47.3, 172.0], [47.4, 172.0], [47.5, 172.0], [47.6, 173.0], [47.7, 173.0], [47.8, 174.0], [47.9, 174.0], [48.0, 174.0], [48.1, 174.0], [48.2, 175.0], [48.3, 175.0], [48.4, 175.0], [48.5, 176.0], [48.6, 176.0], [48.7, 176.0], [48.8, 177.0], [48.9, 177.0], [49.0, 177.0], [49.1, 178.0], [49.2, 178.0], [49.3, 179.0], [49.4, 179.0], [49.5, 180.0], [49.6, 180.0], [49.7, 181.0], [49.8, 181.0], [49.9, 181.0], [50.0, 182.0], [50.1, 182.0], [50.2, 182.0], [50.3, 183.0], [50.4, 183.0], [50.5, 183.0], [50.6, 184.0], [50.7, 184.0], [50.8, 184.0], [50.9, 184.0], [51.0, 185.0], [51.1, 185.0], [51.2, 185.0], [51.3, 186.0], [51.4, 186.0], [51.5, 186.0], [51.6, 187.0], [51.7, 187.0], [51.8, 187.0], [51.9, 187.0], [52.0, 188.0], [52.1, 188.0], [52.2, 189.0], [52.3, 189.0], [52.4, 190.0], [52.5, 190.0], [52.6, 190.0], [52.7, 190.0], [52.8, 190.0], [52.9, 191.0], [53.0, 191.0], [53.1, 191.0], [53.2, 192.0], [53.3, 192.0], [53.4, 193.0], [53.5, 193.0], [53.6, 194.0], [53.7, 194.0], [53.8, 194.0], [53.9, 194.0], [54.0, 195.0], [54.1, 195.0], [54.2, 196.0], [54.3, 196.0], [54.4, 196.0], [54.5, 196.0], [54.6, 197.0], [54.7, 197.0], [54.8, 197.0], [54.9, 198.0], [55.0, 199.0], [55.1, 199.0], [55.2, 199.0], [55.3, 200.0], [55.4, 200.0], [55.5, 200.0], [55.6, 201.0], [55.7, 201.0], [55.8, 201.0], [55.9, 202.0], [56.0, 202.0], [56.1, 203.0], [56.2, 203.0], [56.3, 203.0], [56.4, 204.0], [56.5, 204.0], [56.6, 205.0], [56.7, 205.0], [56.8, 205.0], [56.9, 206.0], [57.0, 206.0], [57.1, 206.0], [57.2, 207.0], [57.3, 208.0], [57.4, 208.0], [57.5, 208.0], [57.6, 208.0], [57.7, 209.0], [57.8, 210.0], [57.9, 210.0], [58.0, 210.0], [58.1, 211.0], [58.2, 212.0], [58.3, 213.0], [58.4, 213.0], [58.5, 213.0], [58.6, 214.0], [58.7, 215.0], [58.8, 216.0], [58.9, 216.0], [59.0, 217.0], [59.1, 217.0], [59.2, 217.0], [59.3, 218.0], [59.4, 218.0], [59.5, 218.0], [59.6, 219.0], [59.7, 219.0], [59.8, 220.0], [59.9, 220.0], [60.0, 220.0], [60.1, 221.0], [60.2, 221.0], [60.3, 222.0], [60.4, 223.0], [60.5, 223.0], [60.6, 224.0], [60.7, 225.0], [60.8, 225.0], [60.9, 227.0], [61.0, 227.0], [61.1, 228.0], [61.2, 228.0], [61.3, 229.0], [61.4, 229.0], [61.5, 230.0], [61.6, 230.0], [61.7, 230.0], [61.8, 231.0], [61.9, 231.0], [62.0, 233.0], [62.1, 233.0], [62.2, 234.0], [62.3, 234.0], [62.4, 235.0], [62.5, 235.0], [62.6, 236.0], [62.7, 236.0], [62.8, 237.0], [62.9, 237.0], [63.0, 237.0], [63.1, 238.0], [63.2, 238.0], [63.3, 239.0], [63.4, 239.0], [63.5, 240.0], [63.6, 240.0], [63.7, 242.0], [63.8, 243.0], [63.9, 243.0], [64.0, 244.0], [64.1, 245.0], [64.2, 245.0], [64.3, 246.0], [64.4, 246.0], [64.5, 246.0], [64.6, 247.0], [64.7, 247.0], [64.8, 248.0], [64.9, 249.0], [65.0, 249.0], [65.1, 250.0], [65.2, 251.0], [65.3, 252.0], [65.4, 253.0], [65.5, 253.0], [65.6, 253.0], [65.7, 254.0], [65.8, 254.0], [65.9, 254.0], [66.0, 255.0], [66.1, 255.0], [66.2, 256.0], [66.3, 256.0], [66.4, 257.0], [66.5, 257.0], [66.6, 258.0], [66.7, 259.0], [66.8, 259.0], [66.9, 260.0], [67.0, 261.0], [67.1, 261.0], [67.2, 262.0], [67.3, 262.0], [67.4, 263.0], [67.5, 264.0], [67.6, 265.0], [67.7, 265.0], [67.8, 267.0], [67.9, 267.0], [68.0, 268.0], [68.1, 268.0], [68.2, 269.0], [68.3, 270.0], [68.4, 270.0], [68.5, 271.0], [68.6, 271.0], [68.7, 272.0], [68.8, 273.0], [68.9, 273.0], [69.0, 274.0], [69.1, 274.0], [69.2, 274.0], [69.3, 275.0], [69.4, 276.0], [69.5, 277.0], [69.6, 278.0], [69.7, 278.0], [69.8, 279.0], [69.9, 280.0], [70.0, 281.0], [70.1, 281.0], [70.2, 282.0], [70.3, 282.0], [70.4, 283.0], [70.5, 284.0], [70.6, 285.0], [70.7, 287.0], [70.8, 288.0], [70.9, 288.0], [71.0, 290.0], [71.1, 291.0], [71.2, 292.0], [71.3, 293.0], [71.4, 293.0], [71.5, 294.0], [71.6, 294.0], [71.7, 295.0], [71.8, 296.0], [71.9, 296.0], [72.0, 297.0], [72.1, 297.0], [72.2, 299.0], [72.3, 299.0], [72.4, 300.0], [72.5, 301.0], [72.6, 301.0], [72.7, 302.0], [72.8, 302.0], [72.9, 304.0], [73.0, 305.0], [73.1, 306.0], [73.2, 308.0], [73.3, 309.0], [73.4, 310.0], [73.5, 313.0], [73.6, 313.0], [73.7, 314.0], [73.8, 314.0], [73.9, 315.0], [74.0, 316.0], [74.1, 317.0], [74.2, 318.0], [74.3, 319.0], [74.4, 321.0], [74.5, 322.0], [74.6, 322.0], [74.7, 323.0], [74.8, 324.0], [74.9, 326.0], [75.0, 326.0], [75.1, 327.0], [75.2, 328.0], [75.3, 329.0], [75.4, 329.0], [75.5, 330.0], [75.6, 332.0], [75.7, 333.0], [75.8, 334.0], [75.9, 335.0], [76.0, 336.0], [76.1, 337.0], [76.2, 338.0], [76.3, 339.0], [76.4, 341.0], [76.5, 342.0], [76.6, 343.0], [76.7, 344.0], [76.8, 345.0], [76.9, 347.0], [77.0, 347.0], [77.1, 348.0], [77.2, 350.0], [77.3, 351.0], [77.4, 351.0], [77.5, 352.0], [77.6, 353.0], [77.7, 354.0], [77.8, 355.0], [77.9, 356.0], [78.0, 358.0], [78.1, 359.0], [78.2, 359.0], [78.3, 361.0], [78.4, 361.0], [78.5, 362.0], [78.6, 364.0], [78.7, 364.0], [78.8, 366.0], [78.9, 368.0], [79.0, 369.0], [79.1, 369.0], [79.2, 370.0], [79.3, 372.0], [79.4, 373.0], [79.5, 374.0], [79.6, 374.0], [79.7, 375.0], [79.8, 376.0], [79.9, 376.0], [80.0, 377.0], [80.1, 378.0], [80.2, 380.0], [80.3, 381.0], [80.4, 382.0], [80.5, 383.0], [80.6, 383.0], [80.7, 385.0], [80.8, 386.0], [80.9, 388.0], [81.0, 389.0], [81.1, 391.0], [81.2, 393.0], [81.3, 394.0], [81.4, 395.0], [81.5, 397.0], [81.6, 398.0], [81.7, 399.0], [81.8, 400.0], [81.9, 402.0], [82.0, 403.0], [82.1, 404.0], [82.2, 406.0], [82.3, 408.0], [82.4, 409.0], [82.5, 410.0], [82.6, 411.0], [82.7, 412.0], [82.8, 412.0], [82.9, 413.0], [83.0, 413.0], [83.1, 415.0], [83.2, 416.0], [83.3, 416.0], [83.4, 418.0], [83.5, 419.0], [83.6, 419.0], [83.7, 420.0], [83.8, 421.0], [83.9, 423.0], [84.0, 424.0], [84.1, 426.0], [84.2, 427.0], [84.3, 429.0], [84.4, 431.0], [84.5, 433.0], [84.6, 435.0], [84.7, 436.0], [84.8, 438.0], [84.9, 438.0], [85.0, 439.0], [85.1, 441.0], [85.2, 444.0], [85.3, 444.0], [85.4, 446.0], [85.5, 446.0], [85.6, 448.0], [85.7, 448.0], [85.8, 449.0], [85.9, 450.0], [86.0, 451.0], [86.1, 452.0], [86.2, 453.0], [86.3, 455.0], [86.4, 457.0], [86.5, 457.0], [86.6, 459.0], [86.7, 460.0], [86.8, 461.0], [86.9, 461.0], [87.0, 463.0], [87.1, 465.0], [87.2, 467.0], [87.3, 469.0], [87.4, 472.0], [87.5, 473.0], [87.6, 475.0], [87.7, 477.0], [87.8, 478.0], [87.9, 479.0], [88.0, 481.0], [88.1, 483.0], [88.2, 485.0], [88.3, 487.0], [88.4, 489.0], [88.5, 489.0], [88.6, 490.0], [88.7, 491.0], [88.8, 493.0], [88.9, 495.0], [89.0, 496.0], [89.1, 499.0], [89.2, 500.0], [89.3, 502.0], [89.4, 504.0], [89.5, 506.0], [89.6, 507.0], [89.7, 510.0], [89.8, 512.0], [89.9, 515.0], [90.0, 515.0], [90.1, 520.0], [90.2, 522.0], [90.3, 525.0], [90.4, 527.0], [90.5, 530.0], [90.6, 532.0], [90.7, 535.0], [90.8, 538.0], [90.9, 540.0], [91.0, 541.0], [91.1, 541.0], [91.2, 542.0], [91.3, 545.0], [91.4, 548.0], [91.5, 549.0], [91.6, 552.0], [91.7, 554.0], [91.8, 556.0], [91.9, 559.0], [92.0, 562.0], [92.1, 563.0], [92.2, 565.0], [92.3, 571.0], [92.4, 574.0], [92.5, 577.0], [92.6, 582.0], [92.7, 587.0], [92.8, 590.0], [92.9, 593.0], [93.0, 596.0], [93.1, 602.0], [93.2, 606.0], [93.3, 609.0], [93.4, 610.0], [93.5, 614.0], [93.6, 615.0], [93.7, 622.0], [93.8, 625.0], [93.9, 628.0], [94.0, 631.0], [94.1, 632.0], [94.2, 635.0], [94.3, 637.0], [94.4, 644.0], [94.5, 649.0], [94.6, 652.0], [94.7, 654.0], [94.8, 656.0], [94.9, 658.0], [95.0, 663.0], [95.1, 669.0], [95.2, 674.0], [95.3, 682.0], [95.4, 687.0], [95.5, 690.0], [95.6, 699.0], [95.7, 704.0], [95.8, 712.0], [95.9, 724.0], [96.0, 732.0], [96.1, 745.0], [96.2, 756.0], [96.3, 765.0], [96.4, 781.0], [96.5, 789.0], [96.6, 799.0], [96.7, 810.0], [96.8, 831.0], [96.9, 848.0], [97.0, 872.0], [97.1, 896.0], [97.2, 911.0], [97.3, 939.0], [97.4, 971.0], [97.5, 1000.0], [97.6, 1032.0], [97.7, 1062.0], [97.8, 1088.0], [97.9, 1095.0], [98.0, 1133.0], [98.1, 1139.0], [98.2, 1166.0], [98.3, 1192.0], [98.4, 1206.0], [98.5, 1243.0], [98.6, 1270.0], [98.7, 1318.0], [98.8, 1411.0], [98.9, 1465.0], [99.0, 1550.0], [99.1, 1875.0], [99.2, 2031.0], [99.3, 2173.0], [99.4, 2379.0], [99.5, 2502.0], [99.6, 2731.0], [99.7, 2877.0], [99.8, 3140.0], [99.9, 4579.0], [100.0, 8815.0]], "isOverall": false, "label": "2-View Prize List", "isController": false}, {"data": [[0.0, 92.0], [0.1, 96.0], [0.2, 97.0], [0.3, 97.0], [0.4, 98.0], [0.5, 100.0], [0.6, 101.0], [0.7, 102.0], [0.8, 102.0], [0.9, 103.0], [1.0, 103.0], [1.1, 104.0], [1.2, 105.0], [1.3, 105.0], [1.4, 106.0], [1.5, 106.0], [1.6, 106.0], [1.7, 107.0], [1.8, 107.0], [1.9, 107.0], [2.0, 108.0], [2.1, 108.0], [2.2, 108.0], [2.3, 109.0], [2.4, 110.0], [2.5, 110.0], [2.6, 110.0], [2.7, 111.0], [2.8, 111.0], [2.9, 111.0], [3.0, 112.0], [3.1, 112.0], [3.2, 112.0], [3.3, 113.0], [3.4, 113.0], [3.5, 113.0], [3.6, 114.0], [3.7, 114.0], [3.8, 114.0], [3.9, 114.0], [4.0, 115.0], [4.1, 116.0], [4.2, 116.0], [4.3, 116.0], [4.4, 117.0], [4.5, 117.0], [4.6, 118.0], [4.7, 118.0], [4.8, 119.0], [4.9, 119.0], [5.0, 120.0], [5.1, 120.0], [5.2, 121.0], [5.3, 121.0], [5.4, 122.0], [5.5, 122.0], [5.6, 123.0], [5.7, 123.0], [5.8, 123.0], [5.9, 124.0], [6.0, 125.0], [6.1, 125.0], [6.2, 126.0], [6.3, 127.0], [6.4, 128.0], [6.5, 130.0], [6.6, 131.0], [6.7, 132.0], [6.8, 133.0], [6.9, 135.0], [7.0, 138.0], [7.1, 143.0], [7.2, 144.0], [7.3, 148.0], [7.4, 152.0], [7.5, 156.0], [7.6, 159.0], [7.7, 163.0], [7.8, 165.0], [7.9, 168.0], [8.0, 172.0], [8.1, 173.0], [8.2, 174.0], [8.3, 177.0], [8.4, 180.0], [8.5, 181.0], [8.6, 182.0], [8.7, 182.0], [8.8, 184.0], [8.9, 185.0], [9.0, 187.0], [9.1, 187.0], [9.2, 189.0], [9.3, 190.0], [9.4, 191.0], [9.5, 193.0], [9.6, 193.0], [9.7, 195.0], [9.8, 196.0], [9.9, 198.0], [10.0, 200.0], [10.1, 202.0], [10.2, 204.0], [10.3, 208.0], [10.4, 209.0], [10.5, 211.0], [10.6, 213.0], [10.7, 215.0], [10.8, 217.0], [10.9, 219.0], [11.0, 222.0], [11.1, 225.0], [11.2, 227.0], [11.3, 233.0], [11.4, 241.0], [11.5, 244.0], [11.6, 246.0], [11.7, 256.0], [11.8, 257.0], [11.9, 261.0], [12.0, 268.0], [12.1, 278.0], [12.2, 291.0], [12.3, 296.0], [12.4, 307.0], [12.5, 322.0], [12.6, 337.0], [12.7, 340.0], [12.8, 349.0], [12.9, 356.0], [13.0, 361.0], [13.1, 374.0], [13.2, 380.0], [13.3, 384.0], [13.4, 388.0], [13.5, 389.0], [13.6, 392.0], [13.7, 395.0], [13.8, 396.0], [13.9, 400.0], [14.0, 406.0], [14.1, 409.0], [14.2, 414.0], [14.3, 419.0], [14.4, 423.0], [14.5, 426.0], [14.6, 427.0], [14.7, 429.0], [14.8, 437.0], [14.9, 443.0], [15.0, 449.0], [15.1, 452.0], [15.2, 457.0], [15.3, 459.0], [15.4, 461.0], [15.5, 465.0], [15.6, 470.0], [15.7, 473.0], [15.8, 476.0], [15.9, 478.0], [16.0, 481.0], [16.1, 487.0], [16.2, 488.0], [16.3, 492.0], [16.4, 493.0], [16.5, 496.0], [16.6, 500.0], [16.7, 503.0], [16.8, 505.0], [16.9, 508.0], [17.0, 510.0], [17.1, 512.0], [17.2, 514.0], [17.3, 518.0], [17.4, 519.0], [17.5, 520.0], [17.6, 522.0], [17.7, 526.0], [17.8, 531.0], [17.9, 533.0], [18.0, 534.0], [18.1, 537.0], [18.2, 542.0], [18.3, 543.0], [18.4, 549.0], [18.5, 552.0], [18.6, 554.0], [18.7, 556.0], [18.8, 559.0], [18.9, 562.0], [19.0, 564.0], [19.1, 566.0], [19.2, 568.0], [19.3, 572.0], [19.4, 575.0], [19.5, 583.0], [19.6, 584.0], [19.7, 589.0], [19.8, 592.0], [19.9, 594.0], [20.0, 596.0], [20.1, 600.0], [20.2, 601.0], [20.3, 606.0], [20.4, 611.0], [20.5, 612.0], [20.6, 614.0], [20.7, 616.0], [20.8, 617.0], [20.9, 618.0], [21.0, 620.0], [21.1, 621.0], [21.2, 623.0], [21.3, 626.0], [21.4, 629.0], [21.5, 635.0], [21.6, 637.0], [21.7, 639.0], [21.8, 640.0], [21.9, 642.0], [22.0, 645.0], [22.1, 646.0], [22.2, 647.0], [22.3, 649.0], [22.4, 653.0], [22.5, 657.0], [22.6, 658.0], [22.7, 660.0], [22.8, 665.0], [22.9, 666.0], [23.0, 669.0], [23.1, 670.0], [23.2, 672.0], [23.3, 675.0], [23.4, 677.0], [23.5, 680.0], [23.6, 682.0], [23.7, 683.0], [23.8, 684.0], [23.9, 685.0], [24.0, 688.0], [24.1, 689.0], [24.2, 691.0], [24.3, 692.0], [24.4, 693.0], [24.5, 694.0], [24.6, 696.0], [24.7, 699.0], [24.8, 701.0], [24.9, 705.0], [25.0, 708.0], [25.1, 711.0], [25.2, 713.0], [25.3, 717.0], [25.4, 718.0], [25.5, 719.0], [25.6, 720.0], [25.7, 721.0], [25.8, 722.0], [25.9, 724.0], [26.0, 725.0], [26.1, 726.0], [26.2, 729.0], [26.3, 731.0], [26.4, 732.0], [26.5, 734.0], [26.6, 736.0], [26.7, 736.0], [26.8, 739.0], [26.9, 741.0], [27.0, 743.0], [27.1, 743.0], [27.2, 744.0], [27.3, 745.0], [27.4, 747.0], [27.5, 749.0], [27.6, 753.0], [27.7, 754.0], [27.8, 756.0], [27.9, 758.0], [28.0, 758.0], [28.1, 762.0], [28.2, 763.0], [28.3, 765.0], [28.4, 766.0], [28.5, 767.0], [28.6, 770.0], [28.7, 771.0], [28.8, 775.0], [28.9, 776.0], [29.0, 779.0], [29.1, 780.0], [29.2, 781.0], [29.3, 782.0], [29.4, 783.0], [29.5, 785.0], [29.6, 785.0], [29.7, 788.0], [29.8, 791.0], [29.9, 792.0], [30.0, 794.0], [30.1, 795.0], [30.2, 797.0], [30.3, 799.0], [30.4, 800.0], [30.5, 803.0], [30.6, 806.0], [30.7, 807.0], [30.8, 809.0], [30.9, 810.0], [31.0, 812.0], [31.1, 813.0], [31.2, 814.0], [31.3, 815.0], [31.4, 817.0], [31.5, 818.0], [31.6, 820.0], [31.7, 823.0], [31.8, 823.0], [31.9, 824.0], [32.0, 825.0], [32.1, 827.0], [32.2, 828.0], [32.3, 830.0], [32.4, 831.0], [32.5, 833.0], [32.6, 834.0], [32.7, 836.0], [32.8, 838.0], [32.9, 840.0], [33.0, 841.0], [33.1, 844.0], [33.2, 845.0], [33.3, 847.0], [33.4, 851.0], [33.5, 853.0], [33.6, 854.0], [33.7, 854.0], [33.8, 855.0], [33.9, 857.0], [34.0, 858.0], [34.1, 859.0], [34.2, 862.0], [34.3, 862.0], [34.4, 863.0], [34.5, 865.0], [34.6, 867.0], [34.7, 868.0], [34.8, 870.0], [34.9, 871.0], [35.0, 872.0], [35.1, 874.0], [35.2, 875.0], [35.3, 877.0], [35.4, 878.0], [35.5, 881.0], [35.6, 881.0], [35.7, 884.0], [35.8, 886.0], [35.9, 886.0], [36.0, 888.0], [36.1, 889.0], [36.2, 890.0], [36.3, 892.0], [36.4, 894.0], [36.5, 896.0], [36.6, 898.0], [36.7, 900.0], [36.8, 901.0], [36.9, 903.0], [37.0, 904.0], [37.1, 905.0], [37.2, 908.0], [37.3, 910.0], [37.4, 911.0], [37.5, 911.0], [37.6, 913.0], [37.7, 914.0], [37.8, 915.0], [37.9, 916.0], [38.0, 916.0], [38.1, 918.0], [38.2, 921.0], [38.3, 922.0], [38.4, 924.0], [38.5, 926.0], [38.6, 927.0], [38.7, 930.0], [38.8, 932.0], [38.9, 934.0], [39.0, 935.0], [39.1, 936.0], [39.2, 937.0], [39.3, 938.0], [39.4, 939.0], [39.5, 940.0], [39.6, 942.0], [39.7, 943.0], [39.8, 944.0], [39.9, 946.0], [40.0, 947.0], [40.1, 948.0], [40.2, 950.0], [40.3, 953.0], [40.4, 954.0], [40.5, 955.0], [40.6, 957.0], [40.7, 958.0], [40.8, 960.0], [40.9, 960.0], [41.0, 961.0], [41.1, 963.0], [41.2, 964.0], [41.3, 966.0], [41.4, 967.0], [41.5, 968.0], [41.6, 969.0], [41.7, 971.0], [41.8, 973.0], [41.9, 973.0], [42.0, 974.0], [42.1, 975.0], [42.2, 977.0], [42.3, 979.0], [42.4, 980.0], [42.5, 982.0], [42.6, 983.0], [42.7, 984.0], [42.8, 985.0], [42.9, 987.0], [43.0, 989.0], [43.1, 990.0], [43.2, 991.0], [43.3, 992.0], [43.4, 993.0], [43.5, 995.0], [43.6, 996.0], [43.7, 997.0], [43.8, 999.0], [43.9, 1001.0], [44.0, 1002.0], [44.1, 1003.0], [44.2, 1004.0], [44.3, 1005.0], [44.4, 1007.0], [44.5, 1010.0], [44.6, 1012.0], [44.7, 1012.0], [44.8, 1014.0], [44.9, 1016.0], [45.0, 1019.0], [45.1, 1020.0], [45.2, 1021.0], [45.3, 1022.0], [45.4, 1022.0], [45.5, 1024.0], [45.6, 1026.0], [45.7, 1027.0], [45.8, 1028.0], [45.9, 1029.0], [46.0, 1030.0], [46.1, 1032.0], [46.2, 1033.0], [46.3, 1035.0], [46.4, 1036.0], [46.5, 1037.0], [46.6, 1038.0], [46.7, 1040.0], [46.8, 1042.0], [46.9, 1043.0], [47.0, 1044.0], [47.1, 1046.0], [47.2, 1048.0], [47.3, 1049.0], [47.4, 1050.0], [47.5, 1052.0], [47.6, 1053.0], [47.7, 1055.0], [47.8, 1056.0], [47.9, 1057.0], [48.0, 1057.0], [48.1, 1058.0], [48.2, 1059.0], [48.3, 1061.0], [48.4, 1062.0], [48.5, 1063.0], [48.6, 1064.0], [48.7, 1066.0], [48.8, 1067.0], [48.9, 1071.0], [49.0, 1072.0], [49.1, 1073.0], [49.2, 1074.0], [49.3, 1076.0], [49.4, 1076.0], [49.5, 1078.0], [49.6, 1079.0], [49.7, 1080.0], [49.8, 1081.0], [49.9, 1082.0], [50.0, 1084.0], [50.1, 1085.0], [50.2, 1087.0], [50.3, 1088.0], [50.4, 1089.0], [50.5, 1091.0], [50.6, 1092.0], [50.7, 1093.0], [50.8, 1094.0], [50.9, 1096.0], [51.0, 1096.0], [51.1, 1098.0], [51.2, 1098.0], [51.3, 1100.0], [51.4, 1102.0], [51.5, 1103.0], [51.6, 1104.0], [51.7, 1106.0], [51.8, 1108.0], [51.9, 1110.0], [52.0, 1110.0], [52.1, 1111.0], [52.2, 1112.0], [52.3, 1114.0], [52.4, 1115.0], [52.5, 1116.0], [52.6, 1117.0], [52.7, 1118.0], [52.8, 1118.0], [52.9, 1120.0], [53.0, 1120.0], [53.1, 1121.0], [53.2, 1123.0], [53.3, 1124.0], [53.4, 1125.0], [53.5, 1126.0], [53.6, 1129.0], [53.7, 1130.0], [53.8, 1131.0], [53.9, 1132.0], [54.0, 1133.0], [54.1, 1134.0], [54.2, 1137.0], [54.3, 1137.0], [54.4, 1139.0], [54.5, 1141.0], [54.6, 1141.0], [54.7, 1142.0], [54.8, 1143.0], [54.9, 1144.0], [55.0, 1145.0], [55.1, 1146.0], [55.2, 1148.0], [55.3, 1149.0], [55.4, 1151.0], [55.5, 1152.0], [55.6, 1153.0], [55.7, 1155.0], [55.8, 1156.0], [55.9, 1159.0], [56.0, 1160.0], [56.1, 1163.0], [56.2, 1164.0], [56.3, 1165.0], [56.4, 1166.0], [56.5, 1167.0], [56.6, 1168.0], [56.7, 1170.0], [56.8, 1170.0], [56.9, 1172.0], [57.0, 1173.0], [57.1, 1174.0], [57.2, 1176.0], [57.3, 1177.0], [57.4, 1179.0], [57.5, 1181.0], [57.6, 1183.0], [57.7, 1187.0], [57.8, 1188.0], [57.9, 1189.0], [58.0, 1190.0], [58.1, 1192.0], [58.2, 1195.0], [58.3, 1196.0], [58.4, 1197.0], [58.5, 1199.0], [58.6, 1200.0], [58.7, 1200.0], [58.8, 1202.0], [58.9, 1202.0], [59.0, 1204.0], [59.1, 1206.0], [59.2, 1207.0], [59.3, 1209.0], [59.4, 1210.0], [59.5, 1211.0], [59.6, 1211.0], [59.7, 1212.0], [59.8, 1213.0], [59.9, 1214.0], [60.0, 1215.0], [60.1, 1217.0], [60.2, 1219.0], [60.3, 1222.0], [60.4, 1224.0], [60.5, 1226.0], [60.6, 1227.0], [60.7, 1227.0], [60.8, 1229.0], [60.9, 1231.0], [61.0, 1232.0], [61.1, 1233.0], [61.2, 1235.0], [61.3, 1237.0], [61.4, 1240.0], [61.5, 1241.0], [61.6, 1242.0], [61.7, 1244.0], [61.8, 1246.0], [61.9, 1248.0], [62.0, 1250.0], [62.1, 1251.0], [62.2, 1253.0], [62.3, 1254.0], [62.4, 1256.0], [62.5, 1257.0], [62.6, 1259.0], [62.7, 1261.0], [62.8, 1263.0], [62.9, 1265.0], [63.0, 1267.0], [63.1, 1270.0], [63.2, 1272.0], [63.3, 1275.0], [63.4, 1277.0], [63.5, 1278.0], [63.6, 1278.0], [63.7, 1281.0], [63.8, 1282.0], [63.9, 1284.0], [64.0, 1284.0], [64.1, 1285.0], [64.2, 1286.0], [64.3, 1287.0], [64.4, 1289.0], [64.5, 1291.0], [64.6, 1293.0], [64.7, 1294.0], [64.8, 1297.0], [64.9, 1297.0], [65.0, 1299.0], [65.1, 1300.0], [65.2, 1302.0], [65.3, 1303.0], [65.4, 1304.0], [65.5, 1306.0], [65.6, 1309.0], [65.7, 1310.0], [65.8, 1313.0], [65.9, 1314.0], [66.0, 1315.0], [66.1, 1316.0], [66.2, 1317.0], [66.3, 1319.0], [66.4, 1320.0], [66.5, 1322.0], [66.6, 1324.0], [66.7, 1327.0], [66.8, 1329.0], [66.9, 1330.0], [67.0, 1332.0], [67.1, 1334.0], [67.2, 1334.0], [67.3, 1336.0], [67.4, 1337.0], [67.5, 1338.0], [67.6, 1340.0], [67.7, 1340.0], [67.8, 1341.0], [67.9, 1342.0], [68.0, 1344.0], [68.1, 1345.0], [68.2, 1347.0], [68.3, 1348.0], [68.4, 1349.0], [68.5, 1353.0], [68.6, 1353.0], [68.7, 1356.0], [68.8, 1358.0], [68.9, 1360.0], [69.0, 1363.0], [69.1, 1364.0], [69.2, 1367.0], [69.3, 1368.0], [69.4, 1368.0], [69.5, 1372.0], [69.6, 1373.0], [69.7, 1375.0], [69.8, 1377.0], [69.9, 1379.0], [70.0, 1381.0], [70.1, 1382.0], [70.2, 1383.0], [70.3, 1385.0], [70.4, 1387.0], [70.5, 1389.0], [70.6, 1391.0], [70.7, 1394.0], [70.8, 1394.0], [70.9, 1396.0], [71.0, 1396.0], [71.1, 1398.0], [71.2, 1399.0], [71.3, 1401.0], [71.4, 1404.0], [71.5, 1405.0], [71.6, 1406.0], [71.7, 1407.0], [71.8, 1409.0], [71.9, 1410.0], [72.0, 1412.0], [72.1, 1414.0], [72.2, 1415.0], [72.3, 1417.0], [72.4, 1419.0], [72.5, 1421.0], [72.6, 1423.0], [72.7, 1424.0], [72.8, 1427.0], [72.9, 1432.0], [73.0, 1435.0], [73.1, 1436.0], [73.2, 1439.0], [73.3, 1441.0], [73.4, 1444.0], [73.5, 1447.0], [73.6, 1449.0], [73.7, 1453.0], [73.8, 1455.0], [73.9, 1456.0], [74.0, 1458.0], [74.1, 1459.0], [74.2, 1462.0], [74.3, 1466.0], [74.4, 1467.0], [74.5, 1471.0], [74.6, 1474.0], [74.7, 1475.0], [74.8, 1476.0], [74.9, 1478.0], [75.0, 1480.0], [75.1, 1483.0], [75.2, 1484.0], [75.3, 1485.0], [75.4, 1488.0], [75.5, 1490.0], [75.6, 1493.0], [75.7, 1495.0], [75.8, 1497.0], [75.9, 1499.0], [76.0, 1501.0], [76.1, 1502.0], [76.2, 1505.0], [76.3, 1506.0], [76.4, 1507.0], [76.5, 1509.0], [76.6, 1512.0], [76.7, 1513.0], [76.8, 1515.0], [76.9, 1517.0], [77.0, 1520.0], [77.1, 1521.0], [77.2, 1522.0], [77.3, 1523.0], [77.4, 1526.0], [77.5, 1527.0], [77.6, 1533.0], [77.7, 1534.0], [77.8, 1537.0], [77.9, 1540.0], [78.0, 1544.0], [78.1, 1547.0], [78.2, 1549.0], [78.3, 1552.0], [78.4, 1553.0], [78.5, 1555.0], [78.6, 1559.0], [78.7, 1563.0], [78.8, 1566.0], [78.9, 1568.0], [79.0, 1571.0], [79.1, 1572.0], [79.2, 1576.0], [79.3, 1578.0], [79.4, 1582.0], [79.5, 1585.0], [79.6, 1587.0], [79.7, 1589.0], [79.8, 1593.0], [79.9, 1596.0], [80.0, 1598.0], [80.1, 1600.0], [80.2, 1604.0], [80.3, 1607.0], [80.4, 1611.0], [80.5, 1614.0], [80.6, 1616.0], [80.7, 1618.0], [80.8, 1619.0], [80.9, 1623.0], [81.0, 1625.0], [81.1, 1627.0], [81.2, 1629.0], [81.3, 1631.0], [81.4, 1634.0], [81.5, 1638.0], [81.6, 1643.0], [81.7, 1646.0], [81.8, 1647.0], [81.9, 1649.0], [82.0, 1652.0], [82.1, 1654.0], [82.2, 1656.0], [82.3, 1658.0], [82.4, 1661.0], [82.5, 1663.0], [82.6, 1668.0], [82.7, 1677.0], [82.8, 1678.0], [82.9, 1680.0], [83.0, 1682.0], [83.1, 1686.0], [83.2, 1688.0], [83.3, 1692.0], [83.4, 1697.0], [83.5, 1700.0], [83.6, 1705.0], [83.7, 1709.0], [83.8, 1712.0], [83.9, 1716.0], [84.0, 1721.0], [84.1, 1725.0], [84.2, 1729.0], [84.3, 1735.0], [84.4, 1737.0], [84.5, 1743.0], [84.6, 1745.0], [84.7, 1748.0], [84.8, 1751.0], [84.9, 1753.0], [85.0, 1756.0], [85.1, 1757.0], [85.2, 1762.0], [85.3, 1765.0], [85.4, 1767.0], [85.5, 1769.0], [85.6, 1773.0], [85.7, 1774.0], [85.8, 1777.0], [85.9, 1779.0], [86.0, 1781.0], [86.1, 1784.0], [86.2, 1785.0], [86.3, 1788.0], [86.4, 1794.0], [86.5, 1797.0], [86.6, 1801.0], [86.7, 1805.0], [86.8, 1807.0], [86.9, 1813.0], [87.0, 1818.0], [87.1, 1820.0], [87.2, 1822.0], [87.3, 1828.0], [87.4, 1834.0], [87.5, 1835.0], [87.6, 1838.0], [87.7, 1842.0], [87.8, 1844.0], [87.9, 1851.0], [88.0, 1855.0], [88.1, 1860.0], [88.2, 1869.0], [88.3, 1874.0], [88.4, 1882.0], [88.5, 1884.0], [88.6, 1887.0], [88.7, 1892.0], [88.8, 1895.0], [88.9, 1902.0], [89.0, 1906.0], [89.1, 1911.0], [89.2, 1918.0], [89.3, 1927.0], [89.4, 1930.0], [89.5, 1933.0], [89.6, 1937.0], [89.7, 1939.0], [89.8, 1947.0], [89.9, 1952.0], [90.0, 1958.0], [90.1, 1961.0], [90.2, 1965.0], [90.3, 1973.0], [90.4, 1979.0], [90.5, 1984.0], [90.6, 1989.0], [90.7, 1996.0], [90.8, 2005.0], [90.9, 2007.0], [91.0, 2011.0], [91.1, 2017.0], [91.2, 2028.0], [91.3, 2032.0], [91.4, 2039.0], [91.5, 2044.0], [91.6, 2049.0], [91.7, 2057.0], [91.8, 2065.0], [91.9, 2072.0], [92.0, 2085.0], [92.1, 2092.0], [92.2, 2103.0], [92.3, 2110.0], [92.4, 2115.0], [92.5, 2124.0], [92.6, 2126.0], [92.7, 2135.0], [92.8, 2147.0], [92.9, 2156.0], [93.0, 2162.0], [93.1, 2167.0], [93.2, 2177.0], [93.3, 2180.0], [93.4, 2188.0], [93.5, 2194.0], [93.6, 2204.0], [93.7, 2209.0], [93.8, 2218.0], [93.9, 2231.0], [94.0, 2238.0], [94.1, 2260.0], [94.2, 2269.0], [94.3, 2278.0], [94.4, 2300.0], [94.5, 2313.0], [94.6, 2323.0], [94.7, 2338.0], [94.8, 2346.0], [94.9, 2364.0], [95.0, 2371.0], [95.1, 2385.0], [95.2, 2393.0], [95.3, 2407.0], [95.4, 2413.0], [95.5, 2419.0], [95.6, 2432.0], [95.7, 2440.0], [95.8, 2442.0], [95.9, 2465.0], [96.0, 2486.0], [96.1, 2506.0], [96.2, 2528.0], [96.3, 2538.0], [96.4, 2569.0], [96.5, 2606.0], [96.6, 2624.0], [96.7, 2640.0], [96.8, 2658.0], [96.9, 2666.0], [97.0, 2700.0], [97.1, 2779.0], [97.2, 2817.0], [97.3, 2869.0], [97.4, 2904.0], [97.5, 2961.0], [97.6, 2979.0], [97.7, 3033.0], [97.8, 3068.0], [97.9, 3104.0], [98.0, 3199.0], [98.1, 3213.0], [98.2, 3269.0], [98.3, 3337.0], [98.4, 3396.0], [98.5, 3471.0], [98.6, 3522.0], [98.7, 3619.0], [98.8, 3695.0], [98.9, 3785.0], [99.0, 3863.0], [99.1, 3911.0], [99.2, 4009.0], [99.3, 4096.0], [99.4, 4455.0], [99.5, 4823.0], [99.6, 5270.0], [99.7, 5693.0], [99.8, 6243.0], [99.9, 9954.0], [100.0, 15351.0]], "isOverall": false, "label": "4-Query My Prizes", "isController": false}, {"data": [[0.0, 53.0], [0.1, 56.0], [0.2, 57.0], [0.3, 58.0], [0.4, 59.0], [0.5, 59.0], [0.6, 59.0], [0.7, 60.0], [0.8, 60.0], [0.9, 60.0], [1.0, 61.0], [1.1, 62.0], [1.2, 62.0], [1.3, 62.0], [1.4, 63.0], [1.5, 63.0], [1.6, 63.0], [1.7, 63.0], [1.8, 63.0], [1.9, 64.0], [2.0, 64.0], [2.1, 64.0], [2.2, 64.0], [2.3, 65.0], [2.4, 65.0], [2.5, 65.0], [2.6, 65.0], [2.7, 65.0], [2.8, 65.0], [2.9, 65.0], [3.0, 66.0], [3.1, 66.0], [3.2, 66.0], [3.3, 66.0], [3.4, 66.0], [3.5, 66.0], [3.6, 66.0], [3.7, 67.0], [3.8, 67.0], [3.9, 67.0], [4.0, 67.0], [4.1, 67.0], [4.2, 67.0], [4.3, 68.0], [4.4, 68.0], [4.5, 68.0], [4.6, 68.0], [4.7, 68.0], [4.8, 68.0], [4.9, 68.0], [5.0, 68.0], [5.1, 69.0], [5.2, 69.0], [5.3, 69.0], [5.4, 69.0], [5.5, 69.0], [5.6, 69.0], [5.7, 69.0], [5.8, 70.0], [5.9, 70.0], [6.0, 70.0], [6.1, 70.0], [6.2, 70.0], [6.3, 70.0], [6.4, 70.0], [6.5, 71.0], [6.6, 71.0], [6.7, 71.0], [6.8, 71.0], [6.9, 71.0], [7.0, 71.0], [7.1, 71.0], [7.2, 71.0], [7.3, 72.0], [7.4, 72.0], [7.5, 72.0], [7.6, 72.0], [7.7, 72.0], [7.8, 72.0], [7.9, 72.0], [8.0, 72.0], [8.1, 73.0], [8.2, 73.0], [8.3, 73.0], [8.4, 73.0], [8.5, 73.0], [8.6, 73.0], [8.7, 73.0], [8.8, 73.0], [8.9, 73.0], [9.0, 73.0], [9.1, 74.0], [9.2, 74.0], [9.3, 74.0], [9.4, 74.0], [9.5, 74.0], [9.6, 74.0], [9.7, 74.0], [9.8, 74.0], [9.9, 74.0], [10.0, 74.0], [10.1, 75.0], [10.2, 75.0], [10.3, 75.0], [10.4, 75.0], [10.5, 75.0], [10.6, 75.0], [10.7, 75.0], [10.8, 75.0], [10.9, 75.0], [11.0, 76.0], [11.1, 76.0], [11.2, 76.0], [11.3, 76.0], [11.4, 76.0], [11.5, 76.0], [11.6, 76.0], [11.7, 76.0], [11.8, 76.0], [11.9, 76.0], [12.0, 77.0], [12.1, 77.0], [12.2, 77.0], [12.3, 77.0], [12.4, 77.0], [12.5, 77.0], [12.6, 77.0], [12.7, 77.0], [12.8, 77.0], [12.9, 77.0], [13.0, 78.0], [13.1, 78.0], [13.2, 78.0], [13.3, 78.0], [13.4, 78.0], [13.5, 78.0], [13.6, 78.0], [13.7, 78.0], [13.8, 78.0], [13.9, 78.0], [14.0, 78.0], [14.1, 78.0], [14.2, 79.0], [14.3, 79.0], [14.4, 79.0], [14.5, 79.0], [14.6, 79.0], [14.7, 79.0], [14.8, 79.0], [14.9, 79.0], [15.0, 79.0], [15.1, 79.0], [15.2, 79.0], [15.3, 80.0], [15.4, 80.0], [15.5, 80.0], [15.6, 80.0], [15.7, 80.0], [15.8, 80.0], [15.9, 80.0], [16.0, 80.0], [16.1, 80.0], [16.2, 80.0], [16.3, 80.0], [16.4, 80.0], [16.5, 80.0], [16.6, 81.0], [16.7, 81.0], [16.8, 81.0], [16.9, 81.0], [17.0, 81.0], [17.1, 81.0], [17.2, 81.0], [17.3, 81.0], [17.4, 81.0], [17.5, 81.0], [17.6, 82.0], [17.7, 82.0], [17.8, 82.0], [17.9, 82.0], [18.0, 82.0], [18.1, 82.0], [18.2, 82.0], [18.3, 82.0], [18.4, 82.0], [18.5, 82.0], [18.6, 82.0], [18.7, 82.0], [18.8, 82.0], [18.9, 83.0], [19.0, 83.0], [19.1, 83.0], [19.2, 83.0], [19.3, 83.0], [19.4, 83.0], [19.5, 83.0], [19.6, 83.0], [19.7, 84.0], [19.8, 84.0], [19.9, 84.0], [20.0, 84.0], [20.1, 84.0], [20.2, 84.0], [20.3, 84.0], [20.4, 84.0], [20.5, 84.0], [20.6, 84.0], [20.7, 85.0], [20.8, 85.0], [20.9, 85.0], [21.0, 85.0], [21.1, 85.0], [21.2, 85.0], [21.3, 85.0], [21.4, 85.0], [21.5, 85.0], [21.6, 86.0], [21.7, 86.0], [21.8, 86.0], [21.9, 86.0], [22.0, 86.0], [22.1, 86.0], [22.2, 86.0], [22.3, 86.0], [22.4, 87.0], [22.5, 87.0], [22.6, 87.0], [22.7, 87.0], [22.8, 87.0], [22.9, 87.0], [23.0, 87.0], [23.1, 87.0], [23.2, 87.0], [23.3, 88.0], [23.4, 88.0], [23.5, 88.0], [23.6, 88.0], [23.7, 88.0], [23.8, 88.0], [23.9, 88.0], [24.0, 88.0], [24.1, 89.0], [24.2, 89.0], [24.3, 89.0], [24.4, 89.0], [24.5, 89.0], [24.6, 89.0], [24.7, 89.0], [24.8, 89.0], [24.9, 89.0], [25.0, 90.0], [25.1, 90.0], [25.2, 90.0], [25.3, 90.0], [25.4, 90.0], [25.5, 90.0], [25.6, 90.0], [25.7, 90.0], [25.8, 91.0], [25.9, 91.0], [26.0, 91.0], [26.1, 91.0], [26.2, 91.0], [26.3, 91.0], [26.4, 91.0], [26.5, 91.0], [26.6, 92.0], [26.7, 92.0], [26.8, 92.0], [26.9, 92.0], [27.0, 92.0], [27.1, 92.0], [27.2, 92.0], [27.3, 92.0], [27.4, 93.0], [27.5, 93.0], [27.6, 93.0], [27.7, 93.0], [27.8, 93.0], [27.9, 93.0], [28.0, 93.0], [28.1, 93.0], [28.2, 94.0], [28.3, 94.0], [28.4, 94.0], [28.5, 94.0], [28.6, 94.0], [28.7, 94.0], [28.8, 94.0], [28.9, 95.0], [29.0, 95.0], [29.1, 95.0], [29.2, 95.0], [29.3, 95.0], [29.4, 95.0], [29.5, 95.0], [29.6, 95.0], [29.7, 96.0], [29.8, 96.0], [29.9, 96.0], [30.0, 96.0], [30.1, 96.0], [30.2, 96.0], [30.3, 97.0], [30.4, 97.0], [30.5, 97.0], [30.6, 97.0], [30.7, 97.0], [30.8, 97.0], [30.9, 98.0], [31.0, 98.0], [31.1, 98.0], [31.2, 98.0], [31.3, 98.0], [31.4, 98.0], [31.5, 99.0], [31.6, 99.0], [31.7, 99.0], [31.8, 99.0], [31.9, 99.0], [32.0, 99.0], [32.1, 99.0], [32.2, 99.0], [32.3, 100.0], [32.4, 100.0], [32.5, 100.0], [32.6, 100.0], [32.7, 100.0], [32.8, 100.0], [32.9, 101.0], [33.0, 101.0], [33.1, 101.0], [33.2, 101.0], [33.3, 101.0], [33.4, 102.0], [33.5, 102.0], [33.6, 102.0], [33.7, 102.0], [33.8, 102.0], [33.9, 102.0], [34.0, 102.0], [34.1, 103.0], [34.2, 103.0], [34.3, 103.0], [34.4, 103.0], [34.5, 104.0], [34.6, 104.0], [34.7, 104.0], [34.8, 104.0], [34.9, 104.0], [35.0, 104.0], [35.1, 105.0], [35.2, 105.0], [35.3, 105.0], [35.4, 105.0], [35.5, 105.0], [35.6, 106.0], [35.7, 106.0], [35.8, 106.0], [35.9, 106.0], [36.0, 106.0], [36.1, 106.0], [36.2, 106.0], [36.3, 107.0], [36.4, 107.0], [36.5, 107.0], [36.6, 107.0], [36.7, 107.0], [36.8, 107.0], [36.9, 107.0], [37.0, 108.0], [37.1, 108.0], [37.2, 108.0], [37.3, 108.0], [37.4, 108.0], [37.5, 109.0], [37.6, 109.0], [37.7, 109.0], [37.8, 109.0], [37.9, 110.0], [38.0, 110.0], [38.1, 110.0], [38.2, 110.0], [38.3, 110.0], [38.4, 111.0], [38.5, 111.0], [38.6, 111.0], [38.7, 111.0], [38.8, 112.0], [38.9, 112.0], [39.0, 112.0], [39.1, 112.0], [39.2, 112.0], [39.3, 112.0], [39.4, 113.0], [39.5, 113.0], [39.6, 113.0], [39.7, 113.0], [39.8, 114.0], [39.9, 114.0], [40.0, 114.0], [40.1, 114.0], [40.2, 114.0], [40.3, 115.0], [40.4, 115.0], [40.5, 115.0], [40.6, 115.0], [40.7, 115.0], [40.8, 116.0], [40.9, 116.0], [41.0, 116.0], [41.1, 117.0], [41.2, 117.0], [41.3, 117.0], [41.4, 117.0], [41.5, 117.0], [41.6, 117.0], [41.7, 118.0], [41.8, 118.0], [41.9, 118.0], [42.0, 118.0], [42.1, 118.0], [42.2, 119.0], [42.3, 119.0], [42.4, 119.0], [42.5, 119.0], [42.6, 120.0], [42.7, 120.0], [42.8, 120.0], [42.9, 120.0], [43.0, 121.0], [43.1, 121.0], [43.2, 121.0], [43.3, 121.0], [43.4, 122.0], [43.5, 122.0], [43.6, 122.0], [43.7, 122.0], [43.8, 122.0], [43.9, 123.0], [44.0, 123.0], [44.1, 123.0], [44.2, 123.0], [44.3, 124.0], [44.4, 124.0], [44.5, 124.0], [44.6, 125.0], [44.7, 125.0], [44.8, 125.0], [44.9, 126.0], [45.0, 126.0], [45.1, 126.0], [45.2, 126.0], [45.3, 126.0], [45.4, 127.0], [45.5, 127.0], [45.6, 127.0], [45.7, 127.0], [45.8, 127.0], [45.9, 128.0], [46.0, 128.0], [46.1, 128.0], [46.2, 128.0], [46.3, 128.0], [46.4, 128.0], [46.5, 129.0], [46.6, 129.0], [46.7, 129.0], [46.8, 129.0], [46.9, 129.0], [47.0, 129.0], [47.1, 130.0], [47.2, 130.0], [47.3, 130.0], [47.4, 130.0], [47.5, 131.0], [47.6, 131.0], [47.7, 131.0], [47.8, 131.0], [47.9, 131.0], [48.0, 132.0], [48.1, 132.0], [48.2, 132.0], [48.3, 132.0], [48.4, 132.0], [48.5, 132.0], [48.6, 133.0], [48.7, 133.0], [48.8, 133.0], [48.9, 133.0], [49.0, 134.0], [49.1, 134.0], [49.2, 134.0], [49.3, 134.0], [49.4, 134.0], [49.5, 135.0], [49.6, 135.0], [49.7, 135.0], [49.8, 135.0], [49.9, 136.0], [50.0, 136.0], [50.1, 136.0], [50.2, 136.0], [50.3, 136.0], [50.4, 136.0], [50.5, 137.0], [50.6, 137.0], [50.7, 137.0], [50.8, 137.0], [50.9, 137.0], [51.0, 137.0], [51.1, 138.0], [51.2, 138.0], [51.3, 138.0], [51.4, 138.0], [51.5, 138.0], [51.6, 138.0], [51.7, 138.0], [51.8, 139.0], [51.9, 139.0], [52.0, 139.0], [52.1, 139.0], [52.2, 139.0], [52.3, 140.0], [52.4, 140.0], [52.5, 140.0], [52.6, 140.0], [52.7, 140.0], [52.8, 141.0], [52.9, 141.0], [53.0, 141.0], [53.1, 141.0], [53.2, 142.0], [53.3, 142.0], [53.4, 142.0], [53.5, 143.0], [53.6, 143.0], [53.7, 143.0], [53.8, 143.0], [53.9, 143.0], [54.0, 144.0], [54.1, 144.0], [54.2, 144.0], [54.3, 144.0], [54.4, 144.0], [54.5, 145.0], [54.6, 145.0], [54.7, 146.0], [54.8, 146.0], [54.9, 146.0], [55.0, 146.0], [55.1, 146.0], [55.2, 147.0], [55.3, 147.0], [55.4, 147.0], [55.5, 147.0], [55.6, 147.0], [55.7, 148.0], [55.8, 148.0], [55.9, 148.0], [56.0, 148.0], [56.1, 148.0], [56.2, 149.0], [56.3, 149.0], [56.4, 149.0], [56.5, 149.0], [56.6, 149.0], [56.7, 150.0], [56.8, 150.0], [56.9, 150.0], [57.0, 150.0], [57.1, 150.0], [57.2, 151.0], [57.3, 151.0], [57.4, 151.0], [57.5, 151.0], [57.6, 152.0], [57.7, 152.0], [57.8, 152.0], [57.9, 152.0], [58.0, 153.0], [58.1, 153.0], [58.2, 153.0], [58.3, 153.0], [58.4, 154.0], [58.5, 154.0], [58.6, 154.0], [58.7, 154.0], [58.8, 155.0], [58.9, 155.0], [59.0, 155.0], [59.1, 155.0], [59.2, 156.0], [59.3, 156.0], [59.4, 156.0], [59.5, 156.0], [59.6, 157.0], [59.7, 157.0], [59.8, 157.0], [59.9, 157.0], [60.0, 158.0], [60.1, 158.0], [60.2, 158.0], [60.3, 158.0], [60.4, 159.0], [60.5, 159.0], [60.6, 159.0], [60.7, 159.0], [60.8, 160.0], [60.9, 160.0], [61.0, 160.0], [61.1, 160.0], [61.2, 161.0], [61.3, 161.0], [61.4, 161.0], [61.5, 161.0], [61.6, 161.0], [61.7, 162.0], [61.8, 162.0], [61.9, 162.0], [62.0, 162.0], [62.1, 163.0], [62.2, 163.0], [62.3, 163.0], [62.4, 163.0], [62.5, 164.0], [62.6, 164.0], [62.7, 164.0], [62.8, 164.0], [62.9, 164.0], [63.0, 165.0], [63.1, 165.0], [63.2, 165.0], [63.3, 165.0], [63.4, 165.0], [63.5, 165.0], [63.6, 166.0], [63.7, 166.0], [63.8, 166.0], [63.9, 167.0], [64.0, 167.0], [64.1, 167.0], [64.2, 167.0], [64.3, 167.0], [64.4, 168.0], [64.5, 168.0], [64.6, 168.0], [64.7, 169.0], [64.8, 169.0], [64.9, 169.0], [65.0, 169.0], [65.1, 169.0], [65.2, 170.0], [65.3, 170.0], [65.4, 170.0], [65.5, 170.0], [65.6, 171.0], [65.7, 172.0], [65.8, 172.0], [65.9, 172.0], [66.0, 173.0], [66.1, 173.0], [66.2, 173.0], [66.3, 173.0], [66.4, 174.0], [66.5, 174.0], [66.6, 174.0], [66.7, 174.0], [66.8, 175.0], [66.9, 175.0], [67.0, 176.0], [67.1, 176.0], [67.2, 176.0], [67.3, 176.0], [67.4, 176.0], [67.5, 176.0], [67.6, 177.0], [67.7, 177.0], [67.8, 177.0], [67.9, 178.0], [68.0, 178.0], [68.1, 178.0], [68.2, 178.0], [68.3, 179.0], [68.4, 179.0], [68.5, 179.0], [68.6, 179.0], [68.7, 180.0], [68.8, 180.0], [68.9, 181.0], [69.0, 181.0], [69.1, 181.0], [69.2, 182.0], [69.3, 182.0], [69.4, 182.0], [69.5, 182.0], [69.6, 183.0], [69.7, 183.0], [69.8, 183.0], [69.9, 184.0], [70.0, 184.0], [70.1, 184.0], [70.2, 184.0], [70.3, 185.0], [70.4, 185.0], [70.5, 185.0], [70.6, 186.0], [70.7, 186.0], [70.8, 187.0], [70.9, 187.0], [71.0, 187.0], [71.1, 188.0], [71.2, 188.0], [71.3, 188.0], [71.4, 189.0], [71.5, 189.0], [71.6, 189.0], [71.7, 190.0], [71.8, 190.0], [71.9, 190.0], [72.0, 191.0], [72.1, 191.0], [72.2, 191.0], [72.3, 192.0], [72.4, 193.0], [72.5, 193.0], [72.6, 193.0], [72.7, 193.0], [72.8, 194.0], [72.9, 194.0], [73.0, 194.0], [73.1, 195.0], [73.2, 195.0], [73.3, 195.0], [73.4, 195.0], [73.5, 196.0], [73.6, 196.0], [73.7, 197.0], [73.8, 197.0], [73.9, 197.0], [74.0, 198.0], [74.1, 198.0], [74.2, 199.0], [74.3, 199.0], [74.4, 200.0], [74.5, 200.0], [74.6, 200.0], [74.7, 201.0], [74.8, 201.0], [74.9, 202.0], [75.0, 202.0], [75.1, 202.0], [75.2, 203.0], [75.3, 203.0], [75.4, 204.0], [75.5, 204.0], [75.6, 205.0], [75.7, 205.0], [75.8, 206.0], [75.9, 206.0], [76.0, 207.0], [76.1, 207.0], [76.2, 207.0], [76.3, 207.0], [76.4, 208.0], [76.5, 209.0], [76.6, 209.0], [76.7, 209.0], [76.8, 210.0], [76.9, 210.0], [77.0, 210.0], [77.1, 211.0], [77.2, 211.0], [77.3, 212.0], [77.4, 212.0], [77.5, 212.0], [77.6, 213.0], [77.7, 214.0], [77.8, 214.0], [77.9, 214.0], [78.0, 215.0], [78.1, 215.0], [78.2, 215.0], [78.3, 217.0], [78.4, 217.0], [78.5, 217.0], [78.6, 218.0], [78.7, 218.0], [78.8, 219.0], [78.9, 219.0], [79.0, 219.0], [79.1, 220.0], [79.2, 221.0], [79.3, 221.0], [79.4, 222.0], [79.5, 223.0], [79.6, 223.0], [79.7, 224.0], [79.8, 224.0], [79.9, 224.0], [80.0, 225.0], [80.1, 225.0], [80.2, 226.0], [80.3, 226.0], [80.4, 227.0], [80.5, 227.0], [80.6, 227.0], [80.7, 227.0], [80.8, 228.0], [80.9, 229.0], [81.0, 229.0], [81.1, 229.0], [81.2, 230.0], [81.3, 230.0], [81.4, 231.0], [81.5, 232.0], [81.6, 232.0], [81.7, 233.0], [81.8, 233.0], [81.9, 234.0], [82.0, 235.0], [82.1, 235.0], [82.2, 236.0], [82.3, 236.0], [82.4, 237.0], [82.5, 237.0], [82.6, 238.0], [82.7, 239.0], [82.8, 239.0], [82.9, 239.0], [83.0, 240.0], [83.1, 241.0], [83.2, 242.0], [83.3, 243.0], [83.4, 243.0], [83.5, 244.0], [83.6, 245.0], [83.7, 246.0], [83.8, 247.0], [83.9, 247.0], [84.0, 248.0], [84.1, 248.0], [84.2, 249.0], [84.3, 250.0], [84.4, 250.0], [84.5, 251.0], [84.6, 252.0], [84.7, 253.0], [84.8, 254.0], [84.9, 254.0], [85.0, 256.0], [85.1, 257.0], [85.2, 257.0], [85.3, 258.0], [85.4, 258.0], [85.5, 259.0], [85.6, 261.0], [85.7, 262.0], [85.8, 263.0], [85.9, 264.0], [86.0, 264.0], [86.1, 265.0], [86.2, 266.0], [86.3, 267.0], [86.4, 268.0], [86.5, 269.0], [86.6, 269.0], [86.7, 270.0], [86.8, 271.0], [86.9, 272.0], [87.0, 272.0], [87.1, 274.0], [87.2, 275.0], [87.3, 276.0], [87.4, 277.0], [87.5, 279.0], [87.6, 280.0], [87.7, 280.0], [87.8, 281.0], [87.9, 281.0], [88.0, 282.0], [88.1, 283.0], [88.2, 284.0], [88.3, 285.0], [88.4, 286.0], [88.5, 287.0], [88.6, 287.0], [88.7, 288.0], [88.8, 289.0], [88.9, 291.0], [89.0, 291.0], [89.1, 292.0], [89.2, 293.0], [89.3, 294.0], [89.4, 295.0], [89.5, 297.0], [89.6, 298.0], [89.7, 300.0], [89.8, 301.0], [89.9, 302.0], [90.0, 303.0], [90.1, 304.0], [90.2, 304.0], [90.3, 306.0], [90.4, 307.0], [90.5, 307.0], [90.6, 308.0], [90.7, 309.0], [90.8, 310.0], [90.9, 313.0], [91.0, 315.0], [91.1, 316.0], [91.2, 316.0], [91.3, 317.0], [91.4, 318.0], [91.5, 320.0], [91.6, 322.0], [91.7, 323.0], [91.8, 325.0], [91.9, 331.0], [92.0, 333.0], [92.1, 334.0], [92.2, 335.0], [92.3, 338.0], [92.4, 340.0], [92.5, 342.0], [92.6, 343.0], [92.7, 344.0], [92.8, 346.0], [92.9, 348.0], [93.0, 349.0], [93.1, 351.0], [93.2, 353.0], [93.3, 354.0], [93.4, 356.0], [93.5, 357.0], [93.6, 360.0], [93.7, 362.0], [93.8, 364.0], [93.9, 366.0], [94.0, 370.0], [94.1, 373.0], [94.2, 375.0], [94.3, 378.0], [94.4, 379.0], [94.5, 383.0], [94.6, 385.0], [94.7, 388.0], [94.8, 391.0], [94.9, 395.0], [95.0, 397.0], [95.1, 401.0], [95.2, 406.0], [95.3, 410.0], [95.4, 412.0], [95.5, 415.0], [95.6, 417.0], [95.7, 423.0], [95.8, 424.0], [95.9, 431.0], [96.0, 439.0], [96.1, 444.0], [96.2, 450.0], [96.3, 457.0], [96.4, 459.0], [96.5, 463.0], [96.6, 470.0], [96.7, 470.0], [96.8, 477.0], [96.9, 480.0], [97.0, 484.0], [97.1, 487.0], [97.2, 491.0], [97.3, 493.0], [97.4, 496.0], [97.5, 499.0], [97.6, 503.0], [97.7, 509.0], [97.8, 520.0], [97.9, 521.0], [98.0, 528.0], [98.1, 530.0], [98.2, 543.0], [98.3, 564.0], [98.4, 570.0], [98.5, 587.0], [98.6, 599.0], [98.7, 637.0], [98.8, 656.0], [98.9, 678.0], [99.0, 703.0], [99.1, 769.0], [99.2, 849.0], [99.3, 884.0], [99.4, 1161.0], [99.5, 1344.0], [99.6, 1758.0], [99.7, 2433.0], [99.8, 2593.0], [99.9, 2813.0], [100.0, 3021.0]], "isOverall": false, "label": "1-User Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1958.0, "series": [{"data": [[0.0, 898.0], [600.0, 37.0], [700.0, 22.0], [800.0, 5.0], [900.0, 5.0], [1000.0, 9.0], [1100.0, 40.0], [1200.0, 20.0], [1300.0, 14.0], [1400.0, 7.0], [1500.0, 6.0], [100.0, 1847.0], [1600.0, 1.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2100.0, 1.0], [2200.0, 3.0], [2300.0, 1.0], [2500.0, 2.0], [2600.0, 1.0], [2800.0, 3.0], [2700.0, 6.0], [2900.0, 5.0], [3000.0, 3.0], [3100.0, 2.0], [200.0, 685.0], [3300.0, 1.0], [3200.0, 1.0], [3800.0, 1.0], [300.0, 651.0], [400.0, 201.0], [500.0, 126.0]], "isOverall": false, "label": "3-Draw Prize", "isController": false}, {"data": [[0.0, 1060.0], [8800.0, 1.0], [600.0, 119.0], [700.0, 45.0], [800.0, 23.0], [900.0, 18.0], [1000.0, 19.0], [1100.0, 19.0], [1200.0, 15.0], [1300.0, 7.0], [1400.0, 8.0], [1500.0, 2.0], [100.0, 1500.0], [1600.0, 2.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 5.0], [2100.0, 2.0], [2300.0, 4.0], [2200.0, 1.0], [2400.0, 3.0], [2500.0, 3.0], [2600.0, 1.0], [2800.0, 4.0], [2700.0, 4.0], [2900.0, 2.0], [3100.0, 2.0], [200.0, 788.0], [3200.0, 1.0], [3700.0, 1.0], [4200.0, 1.0], [4500.0, 1.0], [300.0, 436.0], [4700.0, 1.0], [4800.0, 1.0], [400.0, 344.0], [6700.0, 1.0], [500.0, 181.0]], "isOverall": false, "label": "2-View Prize List", "isController": false}, {"data": [[0.0, 22.0], [600.0, 215.0], [700.0, 257.0], [800.0, 289.0], [900.0, 327.0], [1000.0, 342.0], [1100.0, 336.0], [1200.0, 298.0], [1300.0, 281.0], [1400.0, 216.0], [1500.0, 190.0], [1600.0, 155.0], [1700.0, 140.0], [1800.0, 107.0], [1900.0, 86.0], [2000.0, 66.0], [2100.0, 63.0], [2300.0, 39.0], [2200.0, 39.0], [2400.0, 37.0], [2500.0, 20.0], [2600.0, 23.0], [2700.0, 7.0], [2800.0, 11.0], [2900.0, 11.0], [3000.0, 12.0], [3100.0, 6.0], [3200.0, 10.0], [3300.0, 8.0], [3400.0, 6.0], [3500.0, 7.0], [3600.0, 5.0], [3700.0, 6.0], [3800.0, 6.0], [3900.0, 6.0], [4000.0, 6.0], [4300.0, 1.0], [4200.0, 2.0], [4400.0, 2.0], [4600.0, 1.0], [4800.0, 2.0], [4700.0, 2.0], [4900.0, 1.0], [5300.0, 1.0], [5200.0, 2.0], [5600.0, 4.0], [5700.0, 1.0], [5900.0, 2.0], [6200.0, 1.0], [6700.0, 1.0], [6800.0, 1.0], [7100.0, 1.0], [7600.0, 1.0], [10000.0, 1.0], [9900.0, 1.0], [10100.0, 1.0], [11500.0, 1.0], [15300.0, 1.0], [100.0, 435.0], [200.0, 108.0], [300.0, 72.0], [400.0, 123.0], [500.0, 160.0]], "isOverall": false, "label": "4-Query My Prizes", "isController": false}, {"data": [[0.0, 1496.0], [600.0, 18.0], [700.0, 7.0], [800.0, 8.0], [900.0, 3.0], [1100.0, 3.0], [1200.0, 2.0], [1300.0, 1.0], [1400.0, 3.0], [1500.0, 1.0], [100.0, 1958.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 1.0], [2400.0, 2.0], [2500.0, 3.0], [2600.0, 2.0], [2800.0, 3.0], [2700.0, 1.0], [2900.0, 2.0], [3000.0, 1.0], [200.0, 711.0], [300.0, 251.0], [400.0, 112.0], [500.0, 51.0]], "isOverall": false, "label": "1-User Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 13706.0, "series": [{"data": [[0.0, 13706.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3549.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1208.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 2.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 35.30055401662052, "minX": 1.76092962E12, "maxY": 100.0, "series": [{"data": [[1.76092992E12, 97.40725600408793], [1.76092962E12, 35.30055401662052], [1.7609298E12, 100.0], [1.76092968E12, 89.63903811716561], [1.76092986E12, 100.0], [1.76092974E12, 100.0]], "isOverall": false, "label": "Mixed Scenario Users", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76092992E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 61.0, "minX": 1.0, "maxY": 2538.0, "series": [{"data": [[7.0, 134.0], [8.0, 133.0], [9.0, 124.0], [10.0, 140.0], [11.0, 123.0], [13.0, 144.0], [14.0, 476.6666666666667], [16.0, 92.5], [17.0, 86.66666666666666], [19.0, 86.33333333333333], [20.0, 94.0], [21.0, 89.33333333333333], [22.0, 93.0], [23.0, 90.0], [24.0, 92.0], [25.0, 88.71428571428571], [26.0, 131.66666666666666], [27.0, 376.25], [28.0, 142.0], [29.0, 103.66666666666667], [30.0, 112.0], [31.0, 87.66666666666667], [32.0, 104.75], [33.0, 91.16666666666666], [34.0, 136.875], [35.0, 96.0], [36.0, 96.0], [37.0, 85.66666666666667], [38.0, 137.71428571428572], [39.0, 90.83333333333334], [40.0, 112.25], [41.0, 90.875], [42.0, 88.2], [43.0, 88.33333333333333], [44.0, 95.14285714285714], [45.0, 106.8], [46.0, 89.08333333333333], [47.0, 86.75], [48.0, 86.33333333333334], [49.0, 94.71428571428571], [50.0, 85.66666666666667], [51.0, 84.2], [52.0, 112.63636363636365], [53.0, 99.55555555555556], [54.0, 100.55555555555556], [55.0, 110.85714285714286], [56.0, 89.83333333333333], [57.0, 96.5], [58.0, 133.25], [59.0, 88.55555555555556], [60.0, 126.54545454545455], [61.0, 96.0], [62.0, 107.875], [63.0, 111.75], [64.0, 96.125], [65.0, 94.8], [66.0, 111.3846153846154], [67.0, 89.81818181818181], [68.0, 130.25], [69.0, 99.63636363636363], [70.0, 136.4], [71.0, 94.74999999999999], [72.0, 91.64285714285714], [73.0, 85.77777777777777], [74.0, 100.45454545454545], [75.0, 155.45454545454547], [76.0, 94.80000000000001], [77.0, 115.79999999999998], [78.0, 114.14285714285714], [79.0, 124.99999999999999], [80.0, 103.88888888888889], [81.0, 127.16666666666666], [82.0, 93.22222222222221], [83.0, 89.75], [84.0, 93.24999999999999], [85.0, 125.57142857142857], [86.0, 89.66666666666667], [87.0, 108.6], [88.0, 98.9], [89.0, 123.35714285714286], [90.0, 234.8], [91.0, 138.24999999999997], [92.0, 109.12500000000001], [93.0, 142.84615384615384], [94.0, 184.8], [95.0, 171.83333333333334], [96.0, 266.91666666666663], [97.0, 199.70000000000002], [98.0, 110.59999999999998], [99.0, 151.49999999999997], [100.0, 270.6282894736835]], "isOverall": false, "label": "3-Draw Prize", "isController": false}, {"data": [[95.16648578250478, 249.02561319730862]], "isOverall": false, "label": "3-Draw Prize-Aggregated", "isController": false}, {"data": [[6.0, 74.0], [7.0, 61.0], [8.0, 76.0], [9.0, 74.0], [10.0, 67.0], [12.0, 63.666666666666664], [14.0, 73.0], [15.0, 72.25], [16.0, 82.75], [17.0, 281.0], [18.0, 71.33333333333333], [19.0, 216.5], [20.0, 240.0], [21.0, 81.0], [22.0, 141.6], [23.0, 79.33333333333333], [24.0, 108.2], [25.0, 74.0], [26.0, 69.0], [27.0, 81.75], [28.0, 103.75], [30.0, 82.0], [31.0, 84.5], [32.0, 80.25000000000001], [33.0, 92.66666666666667], [34.0, 69.66666666666667], [35.0, 85.6], [36.0, 83.5], [37.0, 136.0], [38.0, 77.0], [39.0, 79.44444444444444], [40.0, 83.75], [41.0, 103.33333333333334], [42.0, 87.6], [43.0, 86.0], [44.0, 139.4], [45.0, 100.57142857142857], [46.0, 79.75], [47.0, 74.75], [48.0, 69.6], [49.0, 115.875], [50.0, 79.375], [51.0, 75.75], [52.0, 74.2], [53.0, 76.14285714285714], [54.0, 75.88888888888889], [55.0, 85.66666666666667], [56.0, 76.57142857142857], [57.0, 83.54545454545455], [58.0, 80.125], [59.0, 132.0], [60.0, 81.0], [61.0, 111.08333333333333], [62.0, 173.6], [63.0, 76.16666666666666], [64.0, 71.0], [65.0, 77.2], [66.0, 130.42857142857144], [67.0, 141.0], [68.0, 79.33333333333333], [69.0, 137.25], [70.0, 147.40000000000003], [71.0, 196.0], [72.0, 148.5], [73.0, 73.3], [74.0, 114.45454545454545], [75.0, 119.625], [76.0, 84.0909090909091], [77.0, 75.1111111111111], [78.0, 118.33333333333333], [79.0, 76.71428571428571], [80.0, 80.16666666666667], [81.0, 90.58333333333333], [82.0, 92.70000000000002], [83.0, 75.63636363636364], [84.0, 89.5], [85.0, 81.5], [86.0, 165.54545454545453], [87.0, 164.25000000000003], [88.0, 112.3], [89.0, 114.94117647058826], [90.0, 101.2], [91.0, 99.42857142857143], [92.0, 82.33333333333333], [93.0, 202.6], [94.0, 281.36363636363643], [95.0, 156.83333333333334], [96.0, 272.92857142857144], [97.0, 332.29999999999995], [98.0, 229.50000000000003], [99.0, 319.2727272727273], [100.0, 298.9605761940871]], "isOverall": false, "label": "2-View Prize List", "isController": false}, {"data": [[94.91468682505415, 273.2615550755931]], "isOverall": false, "label": "2-View Prize List-Aggregated", "isController": false}, {"data": [[2.0, 1553.0], [3.0, 1883.0], [4.0, 2143.0], [5.0, 2413.0], [6.0, 1344.0], [7.0, 2538.0], [8.0, 1340.0], [9.0, 757.5], [10.0, 1071.0], [11.0, 395.0], [12.0, 307.25], [13.0, 587.0], [15.0, 785.3333333333334], [16.0, 782.5], [17.0, 122.0], [18.0, 111.33333333333333], [19.0, 116.25], [21.0, 105.25], [22.0, 103.5], [23.0, 111.0], [24.0, 120.5], [26.0, 302.75], [27.0, 109.85714285714285], [28.0, 134.0], [29.0, 112.0], [30.0, 109.0], [31.0, 120.66666666666667], [32.0, 107.5], [33.0, 399.25], [34.0, 114.0], [35.0, 123.71428571428572], [36.0, 391.8], [37.0, 114.33333333333333], [38.0, 126.6], [39.0, 137.75], [40.0, 234.55555555555554], [41.0, 116.4], [42.0, 129.66666666666666], [43.0, 116.625], [44.0, 130.25], [45.0, 104.16666666666667], [46.0, 155.0], [47.0, 182.4], [48.0, 171.83333333333334], [49.0, 117.5], [50.0, 295.57142857142856], [51.0, 356.44444444444446], [52.0, 116.5], [53.0, 111.33333333333333], [54.0, 262.66666666666663], [55.0, 111.6], [56.0, 260.55555555555554], [57.0, 113.33333333333334], [58.0, 114.33333333333334], [59.0, 109.75], [60.0, 342.0], [61.0, 119.08333333333333], [62.0, 357.5], [63.0, 299.5], [64.0, 192.75], [65.0, 151.75], [66.0, 212.37499999999997], [67.0, 422.62499999999994], [68.0, 126.625], [69.0, 197.70000000000002], [70.0, 302.77777777777777], [71.0, 448.99999999999994], [72.0, 326.0], [73.0, 296.66666666666663], [74.0, 273.75], [75.0, 269.2307692307692], [76.0, 409.1428571428571], [77.0, 299.0], [78.0, 397.6363636363637], [79.0, 268.6666666666667], [80.0, 357.4666666666667], [81.0, 220.0], [82.0, 195.88888888888889], [83.0, 142.27272727272728], [84.0, 328.76923076923083], [85.0, 463.0909090909091], [86.0, 296.2777777777777], [87.0, 292.2], [88.0, 412.8], [89.0, 352.5], [90.0, 411.5], [91.0, 388.46153846153845], [92.0, 273.5], [93.0, 644.7333333333332], [94.0, 422.0], [95.0, 823.8333333333335], [96.0, 890.0], [97.0, 972.8461538461538], [98.0, 982.4166666666667], [99.0, 1111.8], [100.0, 1288.9833038198826], [1.0, 2382.0]], "isOverall": false, "label": "4-Query My Prizes", "isController": false}, {"data": [[95.14092495636987, 1159.9888743455494]], "isOverall": false, "label": "4-Query My Prizes-Aggregated", "isController": false}, {"data": [[3.0, 232.0], [4.0, 133.0], [6.0, 147.5], [7.0, 130.0], [8.0, 148.0], [9.0, 140.0], [10.0, 113.0], [12.0, 103.5], [13.0, 113.5], [14.0, 143.0], [15.0, 87.5], [16.0, 156.0], [17.0, 105.0], [18.0, 113.0], [19.0, 70.5], [20.0, 88.8], [21.0, 171.66666666666666], [22.0, 111.25], [23.0, 67.0], [24.0, 95.4], [25.0, 94.2], [26.0, 113.0], [27.0, 103.33333333333333], [28.0, 152.5], [29.0, 103.09999999999998], [30.0, 84.5], [31.0, 93.0], [32.0, 78.5], [33.0, 98.33333333333333], [34.0, 132.33333333333334], [35.0, 120.0], [36.0, 78.6], [37.0, 91.625], [38.0, 70.66666666666667], [39.0, 84.0], [40.0, 96.2], [41.0, 78.16666666666666], [42.0, 98.87499999999999], [43.0, 106.66666666666667], [44.0, 100.0], [45.0, 90.66666666666667], [46.0, 97.0], [47.0, 89.625], [48.0, 77.0], [49.0, 85.08333333333331], [50.0, 82.0], [51.0, 102.33333333333333], [52.0, 98.57142857142857], [53.0, 92.57142857142858], [54.0, 83.71428571428571], [55.0, 91.66666666666667], [56.0, 78.44444444444444], [57.0, 85.33333333333333], [58.0, 82.5], [59.0, 78.90909090909092], [60.0, 87.14285714285714], [61.0, 115.33333333333334], [62.0, 80.4], [63.0, 75.5], [64.0, 96.27272727272727], [65.0, 92.57142857142857], [66.0, 91.8], [67.0, 84.10000000000001], [68.0, 83.91666666666667], [69.0, 85.5], [70.0, 91.75000000000001], [71.0, 75.77777777777777], [72.0, 89.61538461538461], [73.0, 77.7], [74.0, 81.42857142857143], [75.0, 93.375], [76.0, 80.9090909090909], [77.0, 82.99999999999999], [78.0, 122.57142857142857], [79.0, 76.07692307692307], [80.0, 95.14285714285715], [81.0, 96.42857142857142], [82.0, 82.85714285714285], [83.0, 110.5], [84.0, 88.84615384615385], [85.0, 69.42857142857143], [86.0, 88.61538461538461], [87.0, 89.4], [88.0, 88.92307692307693], [89.0, 87.75], [90.0, 103.77777777777777], [91.0, 96.0], [92.0, 90.57142857142857], [93.0, 86.36363636363637], [94.0, 110.92307692307693], [95.0, 138.66666666666666], [96.0, 122.0], [97.0, 149.4], [98.0, 85.86666666666667], [99.0, 112.70588235294117], [100.0, 191.88467374810327]], "isOverall": false, "label": "1-User Login", "isController": false}, {"data": [[94.78875968992253, 177.48363479758797]], "isOverall": false, "label": "1-User Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4467.133333333333, "minX": 1.76092962E12, "maxY": 181012.65, "series": [{"data": [[1.76092992E12, 89306.45], [1.76092962E12, 30300.633333333335], [1.7609298E12, 173599.73333333334], [1.76092968E12, 172943.1], [1.76092986E12, 178111.65], [1.76092974E12, 181012.65]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.76092992E12, 12236.95], [1.76092962E12, 4467.133333333333], [1.7609298E12, 24203.2], [1.76092968E12, 24389.166666666668], [1.76092986E12, 24804.7], [1.76092974E12, 25154.116666666665]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76092992E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 80.70744680851062, "minX": 1.76092962E12, "maxY": 1329.7543859649159, "series": [{"data": [[1.76092992E12, 272.04312114989744], [1.76092962E12, 95.2758620689655], [1.7609298E12, 305.13319672131166], [1.76092968E12, 195.55816326530623], [1.76092986E12, 258.90707070707026], [1.76092974E12, 252.4230000000001]], "isOverall": false, "label": "3-Draw Prize", "isController": false}, {"data": [[1.76092992E12, 260.0370370370372], [1.76092962E12, 80.70744680851062], [1.7609298E12, 343.51404786680536], [1.76092968E12, 207.69989827060044], [1.76092986E12, 301.395395395395], [1.76092974E12, 284.57058242843044]], "isOverall": false, "label": "2-View Prize List", "isController": false}, {"data": [[1.76092992E12, 1258.8429423459252], [1.76092962E12, 116.19375], [1.7609298E12, 1329.7543859649159], [1.76092968E12, 851.4129979035637], [1.76092986E12, 1297.9262626262628], [1.76092974E12, 1269.7152777777767]], "isOverall": false, "label": "4-Query My Prizes", "isController": false}, {"data": [[1.76092992E12, 171.1455301455299], [1.76092962E12, 95.48999999999998], [1.7609298E12, 218.20846233230122], [1.76092968E12, 142.7096774193548], [1.76092986E12, 198.477341389728], [1.76092974E12, 171.17443012884044]], "isOverall": false, "label": "1-User Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76092992E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 79.97872340425533, "minX": 1.76092962E12, "maxY": 966.2373737373736, "series": [{"data": [[1.76092992E12, 265.9650924024638], [1.76092962E12, 94.68965517241375], [1.7609298E12, 300.5840163934425], [1.76092968E12, 191.99897959183676], [1.76092986E12, 253.60707070707065], [1.76092974E12, 243.8640000000002]], "isOverall": false, "label": "3-Draw Prize", "isController": false}, {"data": [[1.76092992E12, 216.99382716049385], [1.76092962E12, 79.97872340425533], [1.7609298E12, 276.92299687825204], [1.76092968E12, 177.1800610376398], [1.76092986E12, 245.79979979979998], [1.76092974E12, 230.29022704837112]], "isOverall": false, "label": "2-View Prize List", "isController": false}, {"data": [[1.76092992E12, 914.7793240556657], [1.76092962E12, 112.86249999999997], [1.7609298E12, 965.6883384932921], [1.76092968E12, 616.1404612159325], [1.76092986E12, 966.2373737373736], [1.76092974E12, 922.6170634920634]], "isOverall": false, "label": "4-Query My Prizes", "isController": false}, {"data": [[1.76092992E12, 164.56340956340952], [1.76092962E12, 94.59000000000002], [1.7609298E12, 210.0144478844171], [1.76092968E12, 137.13407258064515], [1.76092986E12, 193.2729103726086], [1.76092974E12, 163.33498513379573]], "isOverall": false, "label": "1-User Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76092992E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.76092962E12, "maxY": 18.090000000000003, "series": [{"data": [[1.76092992E12, 2.028747433264888], [1.76092962E12, 0.0], [1.7609298E12, 3.7459016393442646], [1.76092968E12, 0.7357142857142854], [1.76092986E12, 2.4565656565656555], [1.76092974E12, 2.4449999999999945]], "isOverall": false, "label": "3-Draw Prize", "isController": false}, {"data": [[1.76092992E12, 1.6604938271604943], [1.76092962E12, 0.0], [1.7609298E12, 4.765868886576488], [1.76092968E12, 0.6195320447609362], [1.76092986E12, 1.1591591591591561], [1.76092974E12, 1.0375123395853907]], "isOverall": false, "label": "2-View Prize List", "isController": false}, {"data": [[1.76092992E12, 1.0596421471172972], [1.76092962E12, 0.0], [1.7609298E12, 3.8689370485036028], [1.76092968E12, 0.8511530398322854], [1.76092986E12, 1.602020202020201], [1.76092974E12, 1.772817460317462]], "isOverall": false, "label": "4-Query My Prizes", "isController": false}, {"data": [[1.76092992E12, 1.8565488565488586], [1.76092962E12, 18.090000000000003], [1.7609298E12, 4.273477812177507], [1.76092968E12, 5.0544354838709555], [1.76092986E12, 5.102719033232629], [1.76092974E12, 3.0703666997026726]], "isOverall": false, "label": "1-User Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76092992E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 53.0, "minX": 1.76092962E12, "maxY": 11501.0, "series": [{"data": [[1.76092992E12, 11501.0], [1.76092962E12, 232.0], [1.7609298E12, 10111.0], [1.76092968E12, 5725.0], [1.76092986E12, 6844.0], [1.76092974E12, 7601.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.76092992E12, 1275.4], [1.76092962E12, 130.70000000000005], [1.7609298E12, 1435.0], [1.76092968E12, 1030.0], [1.76092986E12, 1346.1000000000008], [1.76092974E12, 1302.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.76092992E12, 2427.26], [1.76092962E12, 166.07999999999993], [1.7609298E12, 3249.5], [1.76092968E12, 2069.700000000002], [1.76092986E12, 2815.54], [1.76092974E12, 2543.199999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.76092992E12, 1580.999999999999], [1.76092962E12, 144.0], [1.7609298E12, 1933.75], [1.76092968E12, 1395.5], [1.76092986E12, 1747.499999999999], [1.76092974E12, 1681.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.76092992E12, 53.0], [1.76092962E12, 55.0], [1.7609298E12, 56.0], [1.76092968E12, 53.0], [1.76092986E12, 54.0], [1.76092974E12, 59.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.76092992E12, 248.0], [1.76092962E12, 91.0], [1.7609298E12, 238.0], [1.76092968E12, 150.0], [1.76092986E12, 229.0], [1.76092974E12, 227.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76092992E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 81.0, "minX": 2.0, "maxY": 15351.0, "series": [{"data": [[2.0, 133.0], [4.0, 107.0], [6.0, 132.0], [7.0, 2143.0], [9.0, 110.5], [11.0, 119.0], [14.0, 104.5], [16.0, 90.5], [17.0, 84.0], [19.0, 88.0], [21.0, 116.0], [24.0, 95.0], [26.0, 98.5], [27.0, 86.0], [30.0, 90.5], [31.0, 81.0], [33.0, 94.0], [37.0, 94.0], [38.0, 97.0], [40.0, 91.0], [41.0, 100.0], [42.0, 83.0], [45.0, 87.0], [44.0, 94.5], [46.0, 95.5], [48.0, 93.0], [51.0, 91.0], [50.0, 277.0], [53.0, 191.0], [52.0, 342.0], [54.0, 137.5], [55.0, 249.5], [56.0, 255.5], [57.0, 258.0], [58.0, 207.5], [59.0, 270.0], [61.0, 223.5], [60.0, 258.0], [62.0, 255.5], [63.0, 228.0], [64.0, 191.0], [66.0, 180.0], [67.0, 229.0], [65.0, 239.0], [68.0, 215.0], [71.0, 181.0], [69.0, 212.0], [70.0, 248.0], [72.0, 181.0], [73.0, 195.0], [75.0, 212.5], [74.0, 225.0], [77.0, 182.0], [76.0, 186.5], [79.0, 103.0], [78.0, 226.5], [81.0, 92.0], [82.0, 278.5], [80.0, 132.0], [83.0, 165.0], [87.0, 162.0], [88.0, 96.0], [97.0, 144.0], [104.0, 2825.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[70.0, 15351.0], [75.0, 10001.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 104.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 2753.5, "series": [{"data": [[2.0, 132.5], [4.0, 107.0], [6.0, 128.5], [7.0, 1236.0], [9.0, 107.5], [11.0, 114.0], [14.0, 98.0], [16.0, 89.0], [17.0, 83.0], [19.0, 87.0], [21.0, 112.0], [24.0, 93.5], [26.0, 94.5], [27.0, 85.5], [30.0, 90.5], [31.0, 81.0], [33.0, 93.0], [37.0, 94.0], [38.0, 94.0], [40.0, 91.0], [41.0, 100.0], [42.0, 83.0], [45.0, 87.0], [44.0, 93.0], [46.0, 94.5], [48.0, 93.0], [51.0, 91.0], [50.0, 262.5], [53.0, 145.0], [52.0, 293.0], [54.0, 126.5], [55.0, 222.0], [56.0, 231.5], [57.0, 236.0], [58.0, 187.5], [59.0, 240.0], [61.0, 205.0], [60.0, 241.0], [62.0, 226.0], [63.0, 207.0], [64.0, 174.0], [66.0, 146.5], [67.0, 199.0], [65.0, 219.0], [68.0, 199.5], [71.0, 154.0], [69.0, 191.0], [70.0, 220.0], [72.0, 162.0], [73.0, 184.0], [75.0, 188.5], [74.0, 208.5], [77.0, 159.0], [76.0, 166.5], [79.0, 92.5], [78.0, 202.5], [81.0, 91.0], [82.0, 193.0], [80.0, 116.0], [83.0, 161.0], [87.0, 120.5], [88.0, 95.0], [97.0, 127.0], [104.0, 2753.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[70.0, 1282.0], [75.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 104.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 12.133333333333333, "minX": 1.76092962E12, "maxY": 66.91666666666667, "series": [{"data": [[1.76092992E12, 32.13333333333333], [1.76092962E12, 12.133333333333333], [1.7609298E12, 64.6], [1.76092968E12, 65.75], [1.76092986E12, 66.21666666666667], [1.76092974E12, 66.91666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76092992E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.76092962E12, "maxY": 67.15, "series": [{"data": [[1.76092992E12, 32.61666666666667], [1.76092962E12, 12.033333333333333], [1.7609298E12, 64.56666666666666], [1.76092968E12, 65.15], [1.76092986E12, 66.2], [1.76092974E12, 67.15]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7609298E12, 0.016666666666666666], [1.76092974E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76092992E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.76092962E12, "maxY": 16.883333333333333, "series": [{"data": [[1.76092992E12, 8.116666666666667], [1.76092962E12, 2.9], [1.7609298E12, 16.266666666666666], [1.76092968E12, 16.333333333333332], [1.76092986E12, 16.5], [1.76092974E12, 16.666666666666668]], "isOverall": false, "label": "3-Draw Prize-success", "isController": false}, {"data": [[1.76092992E12, 8.383333333333333], [1.76092962E12, 2.6666666666666665], [1.7609298E12, 16.133333333333333], [1.76092968E12, 15.9], [1.76092986E12, 16.5], [1.76092974E12, 16.783333333333335]], "isOverall": false, "label": "4-Query My Prizes-success", "isController": false}, {"data": [[1.7609298E12, 0.016666666666666666], [1.76092974E12, 0.016666666666666666]], "isOverall": false, "label": "4-Query My Prizes-failure", "isController": false}, {"data": [[1.76092992E12, 8.1], [1.76092962E12, 3.1333333333333333], [1.7609298E12, 16.016666666666666], [1.76092968E12, 16.383333333333333], [1.76092986E12, 16.65], [1.76092974E12, 16.883333333333333]], "isOverall": false, "label": "2-View Prize List-success", "isController": false}, {"data": [[1.76092992E12, 8.016666666666667], [1.76092962E12, 3.3333333333333335], [1.7609298E12, 16.15], [1.76092968E12, 16.533333333333335], [1.76092986E12, 16.55], [1.76092974E12, 16.816666666666666]], "isOverall": false, "label": "1-User Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76092992E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.76092962E12, "maxY": 67.15, "series": [{"data": [[1.76092992E12, 32.61666666666667], [1.76092962E12, 12.033333333333333], [1.7609298E12, 64.56666666666666], [1.76092968E12, 65.15], [1.76092986E12, 66.2], [1.76092974E12, 67.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7609298E12, 0.016666666666666666], [1.76092974E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76092992E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

